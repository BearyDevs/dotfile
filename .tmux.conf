set-option -g default-terminal "screen-256color"
set-option -ag terminal-overrides ",xterm-256color:RGB"
set -g set-clipboard on
set-option -g default-shell /bin/zsh
set-window-option -q -g utf8 on

set -g prefix C-s
unbind C-b
bind-key C-s send-prefix

set -g mouse on

# ╭──────────────────────────────────────────────────────────╮
# │ Remove delay for exiting insert mode with ESC in Neovim  │
# ╰──────────────────────────────────────────────────────────╯
set -sg escape-time 10

# ╭──────────────────────────────────────────────────────────╮
# │ Undercurl                                                │
# ╰──────────────────────────────────────────────────────────╯
set -g default-terminal "${TERM}"
set -as terminal-overrides ',_:Smulx=\E[4::%p1%dm' # undercurl support
set -as terminal-overrides ',_:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # underscore colours - needs tmux-3.0

# unbind %
# bind | split-window -h

# unbind '"'
# bind - split-window -v

# Split the window and set the path to the current path
unbind %
bind = split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Bind prefix + 0 to create a horizontal split with a height of 10 lines
bind 0 split-window -v -l 7 -c "#{pane_current_path}"

# kill the current pane if there are multiple panes
bind \\ if-shell '[ "$(tmux list-panes | wc -l)" -gt 1 ]' \
    'kill-pane' \
    'display-message "Cannot kill pane: only one pane left"'

unbind r
bind r source-file ~/.tmux.conf \; display-message "TMUX Configuration reloaded!"
bind R command-prompt -I "#S" "rename-session '%%'"

# Bind key to reset tmux session
bind-key T confirm-before -p "Are you sure you want to reset tmux?" kill-server \; new-session -A -s "TMUX"

# ╭──────────────────────────────────────────────────────────╮
# │ -r is repeat                                             │
# ╰──────────────────────────────────────────────────────────╯
bind -r j resize-pane -D 2
bind -r k resize-pane -U 2
bind -r l resize-pane -R 2
bind -r h resize-pane -L 2
bind -r m resize-pane -Z # maximize pane

# Swap the current pane with the next one (clockwise)
bind -r C-w swap-pane -D

# Swap the current pane with the previous one (counter-clockwise)
bind -r C-q swap-pane -U

# Swap panes
# bind-key H swap-pane -L
# bind-key L swap-pane -R
# bind-key K swap-pane -U
# bind-key J swap-pane -D

bind x if-shell "[ $(tmux list-windows | wc -l) -eq 1 ]" "new-window; kill-window -a" "kill-window"
bind S command-prompt -p "New Session:" "new-session -A -s '%%'"

bind-key A confirm-before -p "Are you sure you want to kill all tmux sessions? (y/n)" kill-server

# bind x kill-window
# bind x confirm-before -p "Are you sure you want to kill this window? (y/n)" "kill-window"

# Bind 'prefix + v' to manually save the session and display a message
bind v run-shell '~/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh' \; display-message "Session saved successfully!"

# Change the key binding for creating a new session
bind N command-prompt -p "New Session:" "new-session -A -s '%%'"

# Binding to kill a specific window
bind W command-prompt -p "Kill window number:" "kill-window -t '%%'"

# Binding to kill a specific session
unbind d # it exit tmux
bind d command-prompt -p "Kill session name:" "kill-session -t '%%'"

# Bind prefix + Tab to switch to the next window
# bind-key -n Tab next-window # -n is make it to use without prefix
bind-key -r Tab next-window

# Bind prefix + Shift-Tab to switch to the previous window
# bind-key -n S-Tab previous-window # -n is make it to use without prefix
bind-key -r S-Tab previous-window

# Bind 'Shift+Right Arrow' to switch to the next window
bind-key -n S-Right next-window

# Bind 'Shift+Left Arrow' to switch to the previous window
bind-key -n S-Left previous-window

# ╭──────────────────────────────────────────────────────────╮
# │ Vi Mode (Copy Mode)                                      │
# ╰──────────────────────────────────────────────────────────╯
# Ctrl + c to exit copy mode
# Enter copy mode prefix + [

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"
unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouse

# ╭──────────────────────────────────────────────────────────╮
# │ TPM Plugins                                              │
# ╰──────────────────────────────────────────────────────────╯
set -g @plugins 'tmux-plugins/tpm'

# ╭──────────────────────────────────────────────────────────╮
# │ List of tmux-plugins                                     │
# ╰──────────────────────────────────────────────────────────╯
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes

set -g @themepack 'powerline/double/cyan'
# set -g @themepack 'powerline/block/gray'
# set -g @themepack 'powerline/double/green'
# set -g @themepack 'powerline/double/orange'

# set -g @resurrect-capture-pane-contents 'on'
# set -g @continuum-restore 'on'

#          ╭──────────────────────────────────────────────────────────╮
#          │  Initialize TMUX plugin manager (keep this line at the   │
#          │               very bottom of tmux.conf) ?                │
#          ╰──────────────────────────────────────────────────────────╯
run '~/.tmux/plugins/tpm/tpm'
