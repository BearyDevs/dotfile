{"version":3,"sources":["../src/index.ts","../src/helpers/exec.ts","../src/helpers/logger.ts","../src/helpers/utils.ts","../src/constants/path.ts","../src/helpers/math-diff.ts","../src/helpers/output-info.ts","../src/constants/box.ts","../src/scripts/helpers.ts","../src/constants/component.ts","../package.json","../src/actions/add-action.ts","../src/helpers/check.ts","../src/constants/required.ts","../src/helpers/package.ts","../src/helpers/match.ts","../src/helpers/detect.ts","../src/helpers/fix.ts","../src/constants/templates.ts","../src/prompts/index.ts","../src/actions/doctor-action.ts","../src/actions/env-action.ts","../src/actions/init-action.ts","../src/helpers/fetch.ts","../src/actions/list-action.ts","../src/actions/remove-action.ts","../src/helpers/remove.ts","../src/actions/upgrade-action.ts","../src/helpers/upgrade.ts"],"names":["chalk","Command","execSync","_gradientString","defaultColors","gradientString","logPrefix","Logger","args","item","content","options","type","lines","i","fg","resolve","fileURLToPath","ROOT","resolver","path","COMPONENTS_PATH","getCommandDescAndLog","log","desc","PasCalCase","str","s","findFiles","glob","transformOption","omit","obj","keys","key","getColorVersion","currentVersion","latestVersion","isMajorUpdate","isMinorUpdate","isPatchUpdate","currentVersionArr","latestVersionArr","getVersionAndMode","allDependencies","packageName","versionModeRegex","versionMode","getPackageManagerInfo","packageManager","exec","cmd","commonExecOptions","reject","logCmd","stdout","output","error","matchTextScore","text","pattern","score","textLength","patternLength","j","findMostMatchText","list","maxScore","result","boxRound","existsSync","readFileSync","writeFileSync","retry","updateComponents","autoUpdateComponents","getComponents","components","getLatestVersion","getUnpkgUrl","version","url","componentsJson","downloadFile","data","bail","nextUIComponents","nextUIComponentsKeys","component","nextUIcomponentsPackages","nextUIComponentsKeysSet","nextUIComponentsMap","acc","orderNextUIComponentKeys","colorNextUIComponentKeys","colorMatchRegex","rounded","space","padStart","padEnd","outputComponents","commandName","message","warnError","componentKeyLengthMap","transformComponentsOutput","outputData","value","newVersion","boxHeader","boxHeaderSec","boxHeaderTrd","boxFooter","outputInfo","outputBox","borderStyle","center","color","padding","title","mergedRounded","contentArr","transformArr","c","isPadding","paddingLength","mergedPadding","maxLength","cur","clearColorTitle","titleLength","titleHeaderLength","spaceLen","boxHeaderContent","boxContent","transformCur","spaceLength","pad","spaceFir","spaceSec","padFir","padSec","package_default","getPackageInfo","packagePath","transformVersion","pkg","devDependencies","dependencies","allDependenciesKeys","currentComponents","isAllComponents","NEXT_UI","transformComponentsToPackage","transformPackageDetail","docs","description","detailPackageInfo","FRAMER_MOTION","TAILWINDCSS","THEME_UI","SYSTEM_UI","DOCS_INSTALLED","DOCS_TAILWINDCSS_SETUP","DOCS_PNPM_SETUP","DOCS_PROVIDER_SETUP","tailwindRequired","isTypescript","individualTailwindRequired","isPnpm","walkDeps","walkDepComponents","appRequired","pnpmRequired","nextUIComponent","componentPath","pnpmDir","file","getMatchImport","importRegexAll","matchAll","matchImport","itemImport","importRegex","match","getMatchArray","target","mixinReg","replaceMatchArray","_replaceValue","replaceValue","v","_value","targetArray","contentIndex","moduleIndex","insertIndex","combineProblemRecord","errorInfo","missingDependencies","tailwindName","dependency","info","checkRequiredContentInstalled","dependenciesKeys","hasAllComponents","hasFramerMotion","hasTailwind","hasSystemUI","hasThemeUI","checkTailwind","tailwindPath","tailwindContent","contentMatch","pluginsMatch","isDarkModeCorrect","isContentCorrect","isPluginsCorrect","plugins","individualContent","checkApp","appPath","appContent","isAppCorrect","checkPnpm","npmrcPath","isPnpmCorrect","checkIllegalComponents","loggerError","illegalList","matchComponent","illegalComponents","matchComponents","illegalComponent","findUp","LOCKS","detect","cwd","agent","lockPath","fixProvider","format","write","wrapWithNextUIProvider","returnRegex","_","p1","fixTailwind","errorInfoList","errorType","transformErrorInfo","index","arr","darkModeIndex","darkModeContent","fixPnpm","runInstall","APP_REPO","PAGES_REPO","APP_DIR","PAGES_DIR","tailwindTemplate","prompts","defaultPromptOptions","getAutocompleteMultiselect","choices","getSelect","addAction","addApp","all","prettier","isNextUIAll","currentComponent","currentComponentsKeys","filterCurrentComponents","currentPkgManager","runCmd","_missingDependencies","template","isCorrectProvider","isCorrectPnpm","basename","doctorAction","_enableCheckApp","_enableCheckPnpm","_enableCheckTailwind","enableCheckApp","enableCheckPnpm","enableCheckTailwind","tailwindPaths","problemRecord","isCorrectInstalled","isCorrectTailwind","isCorrect","problem","envAction","rename","oraPromise","Readable","pipeline","tar","fetchTarStream","res","downloadTemplate","root","initAction","projectName","generateTemplate","renameTemplate","originName","err","listAction","remote","removeDependencies","remove","removeTailwind","removeAction","filteredComponents","removeDepList","DEFAULT_SPACE","getUpgradeVersion","upgradeOptionList","optionMaxLenMap","upgradeOption","upgrade","colorVersion","isLatest","outputUpgradeOptionList","upgradeAction","transformComponents","isUpToDate","install","commandList","nextui","command","isArgs","matchCommand","helpInfoArr","reason"],"mappings":"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","sourcesContent":["import type {CommandName} from '@helpers/type';\n\nimport chalk from 'chalk';\nimport {Command} from 'commander';\n\nimport {exec} from '@helpers/exec';\nimport {Logger, gradientString} from '@helpers/logger';\nimport {findMostMatchText} from '@helpers/math-diff';\nimport {outputBox} from '@helpers/output-info';\nimport {getCommandDescAndLog} from '@helpers/utils';\n\nimport pkg from '../package.json';\n\nimport {addAction} from './actions/add-action';\nimport {doctorAction} from './actions/doctor-action';\nimport {envAction} from './actions/env-action';\nimport {initAction} from './actions/init-action';\nimport {listAction} from './actions/list-action';\nimport {removeAction} from './actions/remove-action';\nimport {upgradeAction} from './actions/upgrade-action';\nimport {getLatestVersion} from './scripts/helpers';\n\nconst commandList: CommandName[] = ['add', 'env', 'init', 'list', 'upgrade', 'doctor', 'remove'];\n\nconst nextui = new Command();\n\nnextui\n  .name('nextui')\n  .usage('[command]')\n  .description(`${chalk.blue(getCommandDescAndLog(`\\nNextUI CLI v${pkg.version}\\n`, ''))}`)\n  .version(pkg.version, '-v, --version', 'Output the current version')\n  .helpOption('-h, --help', 'Display help for command')\n  .allowUnknownOption()\n  .action(async (_, command) => {\n    let isArgs = false;\n\n    if (command) {\n      const args = command.args?.[0];\n\n      if (args) {\n        isArgs = true;\n\n        const matchCommand = findMostMatchText(commandList, args);\n\n        if (matchCommand) {\n          Logger.error(\n            `Unknown command '${args}', Did you mean '${chalk.underline(matchCommand)}'?`\n          );\n        } else {\n          Logger.error(`Unknown command '${args}'`);\n        }\n      }\n    }\n\n    if (!isArgs) {\n      const helpInfo = (await exec('nextui --help', {logCmd: false, stdio: 'pipe'})) as string;\n\n      let helpInfoArr = helpInfo.split('\\n');\n\n      helpInfoArr = helpInfoArr.filter((info) => info && !info.includes('NextUI CLI v'));\n      // Add command name color\n      helpInfoArr = helpInfoArr.map((info) => {\n        const command = info.match(/(\\w+)\\s\\[/)?.[1];\n\n        if (command) {\n          return info.replace(command, chalk.cyan(command));\n        }\n\n        return info;\n      });\n\n      Logger.log(helpInfoArr.join('\\n'));\n    }\n    process.exit(0);\n  });\n\nnextui\n  .command('init')\n  .description('Initializes a new project')\n  .argument('[projectName]', 'Name of the project to initialize')\n  .option('-t --template [string]', 'Specify a template for the new project, e.g., app, pages')\n  /** ======================== TODO:(winches)Temporary use npm with default value ======================== */\n  // .option('-p --package [string]', 'The package manager to use for the new project')\n  .action(initAction);\n\nnextui\n  .command('add')\n  .description('Adds components to your project')\n  .argument('[components...]', 'Names of components to add')\n  .option('-a --all [boolean]', 'Add all components', false)\n  .option('-p --packagePath [string]', 'Specify the path to the package.json file')\n  .option('-tw --tailwindPath [string]', 'Specify the path to the tailwind.config.js file')\n  .option('-app --appPath [string]', 'Specify the path to the App.tsx file')\n  .option('--prettier [boolean]', 'Apply Prettier formatting to the added content', false)\n  .option('--addApp [boolean]', 'Include App.tsx file content that requires a provider', false)\n  .action(addAction);\n\nnextui\n  .command('upgrade')\n  .description('Upgrades project components to the latest versions')\n  .argument('[components...]', 'Names of components to upgrade')\n  .option('-p --packagePath [string]', 'Specify the path to the package.json file')\n  .option('-a --all [boolean]', 'Upgrade all components', false)\n  .action(upgradeAction);\n\nnextui\n  .command('remove')\n  .description('Removes components from the project')\n  .argument('[components...]', 'Names of components to remove')\n  .option('-p --packagePath [string]', 'Specify the path to the package.json file')\n  .option('-a --all [boolean]', 'Remove all components', false)\n  .option('-tw --tailwindPath [string]', 'Specify the path to the tailwind.config.js file')\n  .action(removeAction);\n\nnextui\n  .command('list')\n  .description('Lists all components, showing status, descriptions, and versions')\n  .option('-p --packagePath [string]', 'Specify the path to the package.json file')\n  .option('-r --remote', 'List all components available remotely')\n  .action(listAction);\nnextui\n  .command('env')\n  .description('Displays debugging information for the local environment')\n  .option('-p --packagePath [string]', 'Specify the path to the package.json file')\n  .action(envAction);\n\nnextui\n  .command('doctor')\n  .description('Checks for issues in the project')\n  .option('-p --packagePath [string]', 'Specify the path to the package.json file')\n  .option('-tw --tailwindPath [string]', 'Specify the path to the tailwind.config.js file')\n  .option('-app --appPath [string]', 'Specify the path to the App.tsx file')\n  .option('-ca --checkApp [boolean]', 'Check the App.tsx file', false)\n  .option('-ct --checkTailwind [boolean]', 'Check the tailwind.config.js file', true)\n  .option('-cp --checkPnpm [boolean]', 'Check for Pnpm', true)\n  .action(doctorAction);\n\nnextui.hook('preAction', async () => {\n  // Add NextUI CLI version check preAction\n  const currentVersion = pkg.version;\n  const latestVersion = await getLatestVersion(pkg.name);\n\n  if (currentVersion !== latestVersion) {\n    outputBox({\n      color: 'yellow',\n      padding: 1,\n      text: `${chalk.gray(\n        `Available upgrade: v${currentVersion} -> ${chalk.greenBright(\n          `v${latestVersion}`\n        )}\\nRun \\`${chalk.cyan(\n          'npm install nextui-cli@latest'\n        )}\\` to upgrade\\nChangelog: ${chalk.underline(\n          'https://github.com/nextui-org/nextui-cli/releases'\n        )}`\n      )}`,\n      title: gradientString('NextUI CLI')\n    });\n    Logger.newLine();\n  }\n});\n\nnextui.parseAsync(process.argv).catch(async (reason) => {\n  Logger.newLine();\n  Logger.error('Unexpected error. Please report it as a bug:');\n  Logger.log(reason);\n  Logger.newLine();\n  process.exit(1);\n});\n","import type {AppendKeyValue} from './type';\n\nimport {type CommonExecOptions, execSync} from 'child_process';\n\nimport {Logger} from './logger';\nimport {omit} from './utils';\n\nexport async function exec(\n  cmd: string,\n  commonExecOptions?: AppendKeyValue<CommonExecOptions, 'logCmd', boolean>\n) {\n  return new Promise((resolve, reject) => {\n    try {\n      const {logCmd = true} = commonExecOptions || {};\n\n      if (logCmd) {\n        Logger.newLine();\n        Logger.log(`${cmd}`);\n      }\n\n      const stdout = execSync(cmd, {\n        stdio: 'inherit',\n        ...(commonExecOptions ? omit(commonExecOptions, ['logCmd']) : {})\n      });\n\n      if (stdout) {\n        const output = stdout.toString();\n\n        resolve(output);\n      }\n      resolve('');\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n","/* eslint-disable no-console */\n\nimport type {SAFE_ANY} from './type';\n\nimport chalk from 'chalk';\nimport {default as _gradientString} from 'gradient-string';\n\nexport const defaultColors = ['#F54180', '#338EF7'] as const;\n\nexport const gradientString = _gradientString(...defaultColors);\n\nconst logPrefix = gradientString('NextUI CLI:');\n\nexport type PrefixLogType = Extract<\n  keyof typeof Logger,\n  'error' | 'gradient' | 'info' | 'log' | 'warn' | 'success'\n>;\nexport class Logger {\n  constructor() {}\n\n  static log(...args: Parameters<typeof console.log>) {\n    console.log(...args);\n  }\n\n  static info(...args: Parameters<typeof console.info>) {\n    console.info(...args.map((item) => chalk.blue(item)));\n  }\n\n  static success(...args: Parameters<typeof console.info>) {\n    console.info(...args.map((item) => chalk.green(item)));\n  }\n\n  static warn(...args: Parameters<typeof console.warn>) {\n    console.warn(...args.map((item) => chalk.yellow(item)));\n  }\n\n  static error(...args: Parameters<typeof console.error>) {\n    console.error(...args.map((item) => chalk.red(item)));\n  }\n\n  static gradient(content: string | number | boolean, options?: {colors?: tinycolor.ColorInput[]}) {\n    this.log(_gradientString(...(options?.colors ?? defaultColors))(String(content)));\n  }\n\n  static prefix(type: PrefixLogType, ...args: SAFE_ANY) {\n    return this[type](logPrefix, ...args);\n  }\n\n  static newLine(lines?: number) {\n    if (!lines) lines = 1;\n\n    for (let i = 0; i < lines; i++) this.log();\n  }\n}\n","import type {PascalCase, SAFE_ANY} from './type';\n\nimport chalk from 'chalk';\nimport fg, {type Options} from 'fast-glob';\n\nimport {ROOT} from 'src/constants/path';\n\nimport {Logger} from './logger';\n\nexport function getCommandDescAndLog(log: string, desc: string) {\n  Logger.gradient(log);\n\n  return desc;\n}\n\n/**\n * Convert a string to PascalCase.\n * @example 'test-test' => 'TestTest'\n * @param str\n */\nexport function PasCalCase<T extends string>(str: T) {\n  return str\n    .split('-')\n    .map((s) => s.charAt(0).toUpperCase() + s.slice(1))\n    .join('') as PascalCase<T>;\n}\n\n/**\n * Find files by glob pattern.\n * @param glob\n * @param options\n */\nexport const findFiles = (glob: string, options?: Options) => {\n  const file = fg.sync(`${glob}`, {\n    absolute: true,\n    cwd: ROOT,\n    deep: 5,\n    ignore: ['node_modules/**', 'dist/**', 'build/**', 'coverage/**', 'public/**', 'out/**'],\n    onlyFiles: true,\n    ...options\n  });\n\n  return file;\n};\n\nexport function transformOption(options: boolean | 'false') {\n  if (options === 'false') return false;\n\n  return !!options;\n}\n\nexport function omit(obj: Record<string, SAFE_ANY>, keys: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(([key]) => !keys.includes(key)));\n}\n\nexport function getUpgradeType({\n  major,\n  minor,\n  patch\n}: {\n  major: boolean;\n  minor: boolean;\n  patch: boolean;\n}) {\n  if (major) return 'major';\n  if (minor) return 'minor';\n  if (patch) return 'patch';\n\n  return 'minor';\n}\n\nexport function getColorVersion(currentVersion: string, latestVersion: string) {\n  if (isMajorUpdate(currentVersion, latestVersion)) {\n    return isMajorUpdate(currentVersion, latestVersion);\n  } else if (isMinorUpdate(currentVersion, latestVersion)) {\n    return isMinorUpdate(currentVersion, latestVersion);\n  } else if (isPatchUpdate(currentVersion, latestVersion)) {\n    return isPatchUpdate(currentVersion, latestVersion);\n  }\n\n  return latestVersion;\n}\n\nexport function isMajorUpdate(currentVersion: string, latestVersion: string) {\n  const currentVersionArr = currentVersion.split('.');\n  const latestVersionArr = latestVersion.split('.');\n\n  if (currentVersionArr[0] !== latestVersionArr[0]) {\n    return chalk.redBright(latestVersionArr.join('.'));\n  }\n\n  return '';\n}\n\nexport function isMinorUpdate(currentVersion: string, latestVersion: string) {\n  const currentVersionArr = currentVersion.split('.');\n  const latestVersionArr = latestVersion.split('.');\n\n  if (currentVersionArr[1] !== latestVersionArr[1]) {\n    return `${chalk.white(latestVersion[0])}${chalk.white('.')}${chalk.cyanBright(\n      latestVersionArr.slice(1, 3).join('.')\n    )}`;\n  }\n\n  return '';\n}\n\nexport function isPatchUpdate(currentVersion: string, latestVersion: string) {\n  const currentVersionArr = currentVersion.split('.');\n  const latestVersionArr = latestVersion.split('.');\n\n  if (currentVersionArr[2] !== latestVersionArr[2]) {\n    return `${chalk.white(latestVersionArr.slice(0, 2).join('.'))}${chalk.white(\n      '.'\n    )}${chalk.greenBright(latestVersionArr[2])}`;\n  }\n\n  return '';\n}\n\nexport function getVersionAndMode(allDependencies: Record<string, SAFE_ANY>, packageName: string) {\n  const versionModeRegex = /([\\^~])/;\n  const currentVersion = allDependencies[packageName].replace(versionModeRegex, '');\n  const versionMode = allDependencies[packageName].match(versionModeRegex)?.[1] || '';\n\n  return {\n    currentVersion,\n    versionMode\n  };\n}\n\nexport function getPackageManagerInfo(packageManager: string): {install: string; remove: string} {\n  const packageManagerInfo = {\n    npm: {\n      install: 'install',\n      remove: 'uninstall'\n    },\n    pnpm: {\n      install: 'add',\n      remove: 'remove'\n    },\n    yarn: {\n      install: 'add',\n      remove: 'remove'\n    }\n  };\n\n  return packageManagerInfo[packageManager];\n}\n","import {resolve} from 'path';\nimport {fileURLToPath} from 'url';\n\nexport const ROOT = process.cwd();\nexport const resolver = (path: string) => resolve(ROOT, path);\n\nexport const COMPONENTS_PATH = resolve(fileURLToPath(import.meta.url), '../components.json');\n","function matchTextScore(text: string, pattern: string) {\n  let score = 0;\n  const textLength = text.length;\n  const patternLength = pattern.length;\n  let i = 0;\n  let j = 0;\n\n  while (i < textLength && j < patternLength) {\n    if (text[i] === pattern[j]) {\n      score++;\n      j++;\n    }\n\n    i++;\n  }\n\n  return score;\n}\n\nexport function findMostMatchText(list: string[], pattern: string) {\n  let maxScore = 0;\n  let result = '';\n\n  for (const text of list) {\n    const score = matchTextScore(text, pattern);\n\n    if (score > maxScore) {\n      maxScore = score;\n      result = text;\n    }\n  }\n\n  return result !== '' ? result : null;\n}\n","import type {ChalkColor, CommandName} from './type';\n\nimport chalk from 'chalk';\n\nimport {boxRound} from 'src/constants/box';\nimport {\n  type NextUIComponent,\n  type NextUIComponents,\n  colorNextUIComponentKeys,\n  orderNextUIComponentKeys\n} from 'src/constants/component';\n\nimport {Logger} from './logger';\nimport {PasCalCase} from './utils';\n\n// eslint-disable-next-line no-control-regex\nconst colorMatchRegex = /\\u001b\\[[\\d;]+m/g;\n\nconst rounded = boxRound.round;\nconst space = '   ';\nconst padStart = `${rounded.vertical}${space}`;\nconst padEnd = `${space}${rounded.vertical}${space}`;\n\n/**\n * Output the components information e.g. status, description, version, etc.\n * @param components\n * @param commandName\n * @param warnError\n */\nexport function outputComponents({\n  commandName,\n  components,\n  message = 'Current installed components:\\n',\n  warnError = true\n}: {\n  components: NextUIComponents;\n  commandName?: CommandName;\n  warnError?: boolean;\n  message?: string;\n}) {\n  if (!components.length) {\n    if (warnError) {\n      Logger.prefix('warn', 'No components found');\n    }\n\n    return;\n  }\n\n  const componentKeyLengthMap: Record<keyof NextUIComponent, number> = {\n    description: 0,\n    docs: 0,\n    name: 0,\n    package: 0,\n    status: 0,\n    style: 0,\n    version: 0\n  };\n\n  for (const component of components) {\n    for (const key in component) {\n      // Align the length of the version\n      componentKeyLengthMap[key] = Math.max(\n        componentKeyLengthMap[key],\n        key === 'version'\n          ? Math.max(String(component[key]).length, 'version'.length)\n          : String(component[key]).length\n      );\n    }\n  }\n\n  let transformComponentsOutput = components.reduce((acc, component) => {\n    let outputData = padStart;\n\n    for (const key of orderNextUIComponentKeys) {\n      let value = component[key].padEnd(componentKeyLengthMap[key]);\n\n      /** ======================== Replace version to new version ======================== */\n      if (commandName !== 'list' && key === 'version') {\n        // Filter list command cause it will list all the latest components\n        const currentVersion = value.match(/([\\d.]+)\\snew:/)?.[1];\n        const newVersion = value.match(/new:\\s([\\d.]+)/)?.[1];\n\n        if (currentVersion === newVersion) {\n          value = value.replace(/\\snew:\\s([\\d.]+)/, '');\n          value = `${value} 🚀latest`.padEnd(componentKeyLengthMap[key]);\n          value = value.replace('latest', chalk.magentaBright.underline('latest'));\n        } else if (newVersion) {\n          value = `${chalk.white(`${currentVersion} ->`)} ${chalk.yellowBright(\n            `${newVersion} (new)`\n          )}`;\n\n          componentKeyLengthMap[key] = Math.max(\n            // eslint-disable-next-line no-control-regex\n            value.replace(/(\\u001b\\[\\d+m)/g, '').length,\n            componentKeyLengthMap[key]\n          );\n        }\n      }\n\n      /** ======================== Change the color according to different status ======================== */\n      if (component.status === 'stable' && colorNextUIComponentKeys.includes(key)) {\n        value = chalk.greenBright(value);\n      } else if (component.status === 'new') {\n        value = chalk.magentaBright(value);\n      } else if (component.status === 'updated') {\n        value = chalk.blueBright(value);\n      }\n\n      outputData += value + padEnd;\n    }\n\n    outputData;\n\n    acc.push(outputData);\n\n    return acc;\n  }, [] as string[]);\n\n  /** ======================== Generate box header ======================== */\n  let boxHeader = rounded.topLeft + padStart.replace(/.*/g, rounded.horizontal).slice(1);\n  let boxHeaderSec = padStart;\n  let boxHeaderTrd = rounded.vertical + padStart.replace(/.*/g, rounded.horizontal).slice(1);\n\n  for (const key of orderNextUIComponentKeys) {\n    boxHeader += `${rounded.horizontal.padEnd(componentKeyLengthMap[key] + 7, rounded.horizontal)}`;\n    boxHeaderSec += chalk.redBright(PasCalCase(key).padEnd(componentKeyLengthMap[key])) + padEnd;\n    boxHeaderTrd += `${rounded.horizontal.padEnd(\n      componentKeyLengthMap[key] + 7,\n      rounded.horizontal\n    )}`;\n  }\n\n  boxHeader = boxHeader.slice(0, -2) + rounded.topRight;\n  boxHeaderTrd = boxHeaderTrd.slice(0, -2) + rounded.vertical;\n\n  /** ======================== Generate box footer ======================== */\n  let boxFooter = rounded.bottomLeft + padStart.replace(/.*/g, rounded.horizontal).slice(1);\n\n  for (const key of orderNextUIComponentKeys) {\n    boxFooter += `${rounded.horizontal.padEnd(componentKeyLengthMap[key] + 7, rounded.horizontal)}`;\n  }\n\n  boxFooter = boxFooter.slice(0, -2) + rounded.bottomRight;\n\n  transformComponentsOutput = [\n    boxHeader,\n    boxHeaderSec,\n    boxHeaderTrd,\n    ...transformComponentsOutput,\n    boxFooter\n  ];\n\n  Logger.info(message);\n\n  Logger.log(transformComponentsOutput.join('\\n'));\n}\n\n/**\n * Output the environment information e.g. OS, CPU, Node version, etc.\n */\nexport function outputInfo() {\n  Logger.newLine();\n  Logger.log(chalk.redBright('Environment Info:'));\n  Logger.log(chalk.blueBright('  System:'));\n  Logger.log(chalk.blueBright('    OS:'), process.platform);\n  Logger.log(chalk.blueBright('    CPU:'), process.arch);\n  Logger.log(chalk.greenBright('  Binaries:'));\n  Logger.log(chalk.greenBright('    Node:'), process.version);\n  Logger.newLine();\n}\n\n/**\n * Output a box with the content\n * @param text\n * @param center\n * @param log\n * @param color\n * @param title\n * @param borderStyle\n * @param padding\n */\nexport function outputBox({\n  borderStyle = 'round',\n  center = false,\n  color,\n  log = true,\n  padding = 0,\n  text,\n  title\n}: {\n  text: string;\n  center?: boolean;\n  log?: boolean;\n  color?: ChalkColor;\n  title?: string;\n  borderStyle?: keyof typeof boxRound;\n  padding?: number;\n}) {\n  const rounded = boxRound[borderStyle];\n  const mergedRounded = color\n    ? Object.fromEntries(Object.entries(rounded).map(([key, value]) => [key, chalk[color](value)]))\n    : rounded;\n  const contentArr = text.split('\\n');\n  const transformArr = contentArr.map((c) => c.replace(colorMatchRegex, ''));\n\n  const isPadding = padding > 0;\n  const paddingLength = padding;\n\n  const mergedPadding = center || isPadding;\n\n  let maxLength = transformArr.reduce((acc, cur) => (cur.length > acc ? cur.length : acc), 0);\n\n  // Update the padding maxLength\n  // paddingLength * 2 because one vertical line == 4 spaces\n  maxLength = isPadding ? maxLength + paddingLength * 4 : maxLength;\n\n  const clearColorTitle = title ? title.replace(colorMatchRegex, '') : '';\n  const titleLength = title ? clearColorTitle.length : 0;\n  let titleHeaderLength = maxLength - titleLength;\n  const spaceLen = 2;\n\n  while (titleLength + spaceLen + paddingLength >= maxLength) {\n    // Need to adjust the maxLength\n    maxLength += Math.floor(titleLength / 2);\n  }\n  // Update the titleHeaderLength\n  titleHeaderLength = maxLength - titleLength;\n\n  const boxHeaderContent = title\n    ? `${rounded.horizontal\n        .padEnd(Math.floor(titleHeaderLength / 2) - 1, rounded.horizontal)\n        .replaceAll(rounded.horizontal, mergedRounded.horizontal)} ${title} ${rounded.horizontal\n        .padEnd(Math.ceil(titleHeaderLength / 2) - 1, rounded.horizontal)\n        .replaceAll(rounded.horizontal, mergedRounded.horizontal)}`\n    : rounded.horizontal\n        .padEnd(maxLength, rounded.horizontal)\n        .replaceAll(rounded.horizontal, mergedRounded.horizontal);\n\n  const boxHeader = mergedRounded.topLeft + boxHeaderContent + mergedRounded.topRight;\n  const boxFooter =\n    mergedRounded.bottomLeft +\n    rounded.horizontal\n      .padEnd(maxLength, rounded.horizontal)\n      .replaceAll(rounded.horizontal, mergedRounded.horizontal) +\n    mergedRounded.bottomRight;\n\n  let boxContent = contentArr.reduce((acc, cur) => {\n    const transformCur = cur.replace(colorMatchRegex, '');\n    const spaceLength = maxLength - transformCur.length;\n\n    const pad = ' '.repeat(spaceLength);\n\n    const spaceFir = Math.floor(spaceLength / 2);\n    const spaceSec = Math.ceil(spaceLength / 2);\n\n    const padFir = spaceFir > 0 ? ' '.repeat(spaceFir) : '';\n    const padSec = spaceSec > 0 ? ' '.repeat(spaceSec) : '';\n\n    // Over 2 cause one vertical line == 2 spaces\n    // paddingLength = Math.floor(Math.max(paddingLength, spaceFir, spaceSec) / 2);\n\n    mergedPadding\n      ? acc.push(\n          `${mergedRounded.vertical}${spaceLength ? `${padFir}${cur}${padSec}` : cur}${\n            mergedRounded.vertical\n          }`\n        )\n      : acc.push(\n          `${mergedRounded.vertical}${spaceLength > 0 ? `${cur}${pad}` : cur}${\n            mergedRounded.vertical\n          }`\n        );\n\n    return acc;\n  }, [] as string[]);\n\n  // Generate the padding\n  if (mergedPadding) {\n    for (let i = 0; i < paddingLength; i++) {\n      boxContent.unshift(\n        `${mergedRounded.vertical}${' '.repeat(maxLength)}${mergedRounded.vertical}`\n      );\n      boxContent.push(`${mergedRounded.vertical}${' '.repeat(maxLength)}${mergedRounded.vertical}`);\n    }\n  }\n\n  boxContent = [boxHeader, ...boxContent, boxFooter];\n\n  log && Logger.log(boxContent.join('\\n'));\n\n  return boxContent.join('\\n');\n}\n","export const boxRound = {\n  bold: {\n    bottomLeft: '┗',\n    bottomRight: '┛',\n    horizontal: '━',\n    topLeft: '┏',\n    topRight: '┓',\n    vertical: '┃'\n  },\n  classic: {\n    bottomLeft: '+',\n    bottomRight: '+',\n    horizontal: '-',\n    topLeft: '+',\n    topRight: '+',\n    vertical: '|'\n  },\n  double: {\n    bottomLeft: '╚',\n    bottomRight: '╝',\n    horizontal: '═',\n    topLeft: '╔',\n    topRight: '╗',\n    vertical: '║'\n  },\n  doubleSingle: {\n    bottomLeft: '╘',\n    bottomRight: '╛',\n    horizontal: '═',\n    topLeft: '╒',\n    topRight: '╕',\n    vertical: '│'\n  },\n  round: {\n    bottomLeft: '╰',\n    bottomRight: '╯',\n    horizontal: '─',\n    topLeft: '╭',\n    topRight: '╮',\n    vertical: '│'\n  },\n  single: {\n    bottomLeft: '└',\n    bottomRight: '┘',\n    horizontal: '─',\n    topLeft: '┌',\n    topRight: '┐',\n    vertical: '│'\n  },\n  singleDouble: {\n    bottomLeft: '╙',\n    bottomRight: '╜',\n    horizontal: '─',\n    topLeft: '╓',\n    topRight: '╖',\n    vertical: '║'\n  }\n};\n","import {exec} from 'child_process';\nimport {existsSync, readFileSync, writeFileSync} from 'fs';\n\nimport retry from 'async-retry';\n\nimport {Logger} from '@helpers/logger';\nimport {COMPONENTS_PATH} from 'src/constants/path';\n\nexport type Components = {\n  name: string;\n  package: string;\n  version: string;\n  docs: string;\n  description: string;\n  status: string;\n  style: string;\n}[];\n\nexport type ComponentsJson = {\n  version: string;\n  components: Components;\n};\n\nexport async function updateComponents() {\n  if (!existsSync(COMPONENTS_PATH)) {\n    // First time download the latest date from net\n    await autoUpdateComponents();\n\n    return;\n  }\n  // const latestVersion = await getLatestVersion('@nextui-org/react');\n  // TODO:(winches) Remove this after the NextUI first release\n  const latestVersion = '2.3.0';\n\n  const components = JSON.parse(readFileSync(COMPONENTS_PATH, 'utf-8')) as ComponentsJson;\n  const currentVersion = components.version;\n\n  if (currentVersion !== latestVersion) {\n    // After the first time, check the version and update\n    await autoUpdateComponents();\n\n    return;\n  }\n}\n\nexport async function getComponents() {\n  let components: ComponentsJson = {} as ComponentsJson;\n\n  await updateComponents();\n\n  try {\n    components = JSON.parse(readFileSync(COMPONENTS_PATH, 'utf-8')) as ComponentsJson;\n  } catch (error) {\n    new Error(`Get components.json error: ${error}`);\n  }\n\n  return components;\n}\n\nexport async function getLatestVersion(packageName: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    exec(`npm view ${packageName} version`, (error, stdout) => {\n      if (error) {\n        Logger.error(`Get latest ${packageName} error: ${error}`);\n        reject(error);\n      }\n      resolve(stdout.trim());\n    });\n  });\n}\n\nconst getUnpkgUrl = (version: string) =>\n  `https://unpkg.com/@nextui-org/react@${version}/dist/components.json`;\n\nexport async function autoUpdateComponents() {\n  // TODO:(winches) Remove this after the NextUI first release\n  const url = getUnpkgUrl('2.3.0');\n\n  const components = await downloadFile(url);\n\n  const componentsJson = {\n    components,\n    // TODO:(winches) Remove this after the NextUI first release\n    version: '2.3.0'\n  };\n\n  writeFileSync(COMPONENTS_PATH, JSON.stringify(componentsJson, null, 2), 'utf-8');\n}\n\nexport async function downloadFile(url: string): Promise<Components> {\n  let data;\n\n  await retry(\n    async (bail) => {\n      try {\n        const result = await fetch(url, {\n          body: null,\n          headers: {\n            'Content-Type': 'application/json',\n            accept:\n              'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7'\n          },\n          method: 'GET',\n          mode: 'cors'\n        });\n\n        data = JSON.parse(await result.text());\n      } catch (error) {\n        bail(error);\n      }\n    },\n    {\n      retries: 3\n    }\n  );\n\n  return data;\n}\n","import {getComponents} from 'src/scripts/helpers';\n\nexport const nextUIComponents = (await getComponents()).components;\n\nexport const nextUIComponentsKeys = nextUIComponents.map((component) => component.name);\nexport const nextUIcomponentsPackages = nextUIComponents.map((component) => component.package);\n\nexport const nextUIComponentsKeysSet = new Set(nextUIComponentsKeys);\n\nexport const nextUIComponentsMap = nextUIComponents.reduce(\n  (acc, component) => {\n    acc[component.name] = component;\n\n    return acc;\n  },\n  {} as Record<string, (typeof nextUIComponents)[number]>\n);\nexport type NextUIComponentsMap = Record<string, (typeof nextUIComponents)[number]>;\n\nexport const orderNextUIComponentKeys = ['package', 'version', 'status', 'docs'] as const;\n\nexport const colorNextUIComponentKeys = ['package', 'version', 'status'];\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type NextUIComponentStatus = 'stable' | 'updated' | 'new' | (string & {});\n\nexport type NextUIComponent = (typeof nextUIComponents)[0];\n\nexport type NextUIComponents = (Omit<NextUIComponent, 'status'> & {\n  status: NextUIComponentStatus;\n  versionMode: string;\n})[];\n","{\n  \"name\": \"nextui-cli\",\n  \"private\": false,\n  \"type\": \"module\",\n  \"license\": \"MIT\",\n  \"version\": \"0.1.5\",\n  \"homepage\": \"https://github.com/nextui-org/nextui-cli#readme\",\n  \"description\": \"A CLI tool that unlocks seamless NextUI integration\",\n  \"keywords\": [\n    \"UI\",\n    \"CLI\",\n    \"Tool\",\n    \"NextUI\",\n    \"Template\",\n    \"Integration\",\n    \"Add Component\"\n  ],\n  \"author\": {\n    \"name\": \"NextUI\",\n    \"email\": \"support@nextui.org\",\n    \"url\": \"https://github.com/nextui-org\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/nextui-org/nextui-cli.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/nextui-org/nextui-cli/issues\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"bin\": {\n    \"nextui\": \"./dist/index.js\"\n  },\n  \"main\": \"./dist/index.js\",\n  \"module\": \"./dist/index.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"scripts\": {\n    \"dev\": \"tsup --watch\",\n    \"link:cli\": \"pnpm link --global\",\n    \"link:remove\": \"pnpm uninstall --global nextui-cli\",\n    \"build\": \"tsup\",\n    \"update:components\": \"tsx src/scripts/update/update-components.ts\",\n    \"lint\": \"eslint . --max-warnings=0\",\n    \"lint:fix\": \"eslint . -max-warnings=0 --fix\",\n    \"check:prettier\": \"prettier --check .\",\n    \"check:types\": \"tsc --noEmit\",\n    \"changelog\": \"npx conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . && git add .\",\n    \"release\": \"bumpp --execute='pnpm run changelog'\",\n    \"prepare\": \"husky install\",\n    \"postbuild\": \"pnpm run update:components\",\n    \"prepublishOnly\": \"pnpm run build\"\n  },\n  \"dependencies\": {\n    \"async-retry\": \"1.3.3\",\n    \"chalk\": \"5.3.0\",\n    \"commander\": \"11.0.0\",\n    \"fast-glob\": \"3.3.2\",\n    \"find-up\": \"7.0.0\",\n    \"gradient-string\": \"2.0.2\",\n    \"ora\": \"8.0.1\",\n    \"prompts\": \"2.4.2\",\n    \"tar\": \"6.2.1\"\n  },\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"17.7.1\",\n    \"@commitlint/config-conventional\": \"17.7.0\",\n    \"@types/gradient-string\": \"1.1.3\",\n    \"@types/node\": \"20.11.30\",\n    \"@types/prompts\": \"2.4.9\",\n    \"@typescript-eslint/eslint-plugin\": \"6.7.2\",\n    \"@typescript-eslint/parser\": \"6.7.2\",\n    \"bumpp\": \"9.4.0\",\n    \"clean-package\": \"2.2.0\",\n    \"commitlint-plugin-function-rules\": \"2.0.2\",\n    \"conventional-changelog-cli\": \"4.1.0\",\n    \"eslint\": \"8.50.0\",\n    \"eslint-config-prettier\": \"9.0.0\",\n    \"eslint-import-resolver-typescript\": \"3.6.1\",\n    \"eslint-plugin-import\": \"2.28.1\",\n    \"eslint-plugin-prettier\": \"5.0.0\",\n    \"eslint-plugin-sort-destructure-keys\": \"1.5.0\",\n    \"eslint-plugin-sort-keys-fix\": \"1.1.2\",\n    \"eslint-plugin-unused-imports\": \"3.0.0\",\n    \"husky\": \"8.0.3\",\n    \"lint-staged\": \"14.0.1\",\n    \"tsup\": \"7.2.0\",\n    \"tsx\": \"4.7.1\",\n    \"typescript\": \"5.4.4\"\n  },\n  \"engines\": {\n    \"pnpm\": \">=8.x\",\n    \"node\": \">=18.17.x\"\n  },\n  \"packageManager\": \"pnpm@8.7.6\"\n}\n","/* eslint-disable no-var */\nimport type {SAFE_ANY} from '@helpers/type';\n\nimport {existsSync, writeFileSync} from 'fs';\n\nimport chalk from 'chalk';\n\nimport {\n  checkApp,\n  checkIllegalComponents,\n  checkPnpm,\n  checkRequiredContentInstalled,\n  checkTailwind\n} from '@helpers/check';\nimport {detect} from '@helpers/detect';\nimport {exec} from '@helpers/exec';\nimport {fixPnpm, fixProvider, fixTailwind} from '@helpers/fix';\nimport {Logger} from '@helpers/logger';\nimport {getPackageInfo} from '@helpers/package';\nimport {findFiles} from '@helpers/utils';\nimport {nextUIComponents, nextUIComponentsMap} from 'src/constants/component';\nimport {resolver} from 'src/constants/path';\nimport {\n  DOCS_PROVIDER_SETUP,\n  NEXT_UI,\n  individualTailwindRequired,\n  pnpmRequired\n} from 'src/constants/required';\nimport {tailwindTemplate} from 'src/constants/templates';\nimport {getAutocompleteMultiselect} from 'src/prompts';\n\ninterface AddActionOptions {\n  all?: boolean;\n  prettier?: boolean;\n  packagePath?: string;\n  tailwindPath?: string;\n  appPath?: string;\n  addApp?: boolean;\n}\n\nexport async function addAction(components: string[], options: AddActionOptions) {\n  const {\n    addApp = false,\n    all = false,\n    appPath = findFiles('**/App.(j|t)sx')[0],\n    packagePath = resolver('package.json'),\n    prettier = false,\n    tailwindPath = findFiles('**/tailwind.config.(j|t)s')[0]\n  } = options;\n\n  var {allDependencies, allDependenciesKeys, currentComponents} = getPackageInfo(packagePath);\n\n  const isNextUIAll = !!allDependencies[NEXT_UI];\n\n  if (!components.length && !all) {\n    components = await getAutocompleteMultiselect(\n      'Which components would you like to add?',\n      nextUIComponents\n        .filter(\n          (component) =>\n            !currentComponents.some((currentComponent) => currentComponent.name === component.name)\n        )\n        .map((component) => {\n          return {\n            description: component.description,\n            title: component.name,\n            value: component.name\n          };\n        })\n    );\n  } else if (all) {\n    components = [NEXT_UI];\n  }\n\n  /** ======================== Add judge whether illegal component exist ======================== */\n  if (!all && !checkIllegalComponents(components)) {\n    return;\n  }\n\n  // Check whether have added the NextUI components\n  var {allDependenciesKeys, currentComponents} = getPackageInfo(packagePath);\n\n  const currentComponentsKeys = currentComponents.map((c) => c.name);\n  const filterCurrentComponents = components.filter(\n    (c) => currentComponentsKeys.includes(c) || (isNextUIAll && c === NEXT_UI)\n  );\n\n  if (filterCurrentComponents.length) {\n    Logger.prefix(\n      'error',\n      `❌ You have added the following components: ${filterCurrentComponents\n        .map((c) => chalk.underline(c))\n        .join(', ')}`\n    );\n\n    return;\n  }\n\n  // Check whether the App.tsx file exists\n  if (addApp && !appPath) {\n    Logger.prefix(\n      'error',\n      \"❌ App.(j|t)sx file not found. Please specify the appPath if the default search path does not locate your file.  'add --appPath=yourAppPath'\"\n    );\n\n    return;\n  }\n\n  const currentPkgManager = await detect();\n  const runCmd = currentPkgManager === 'npm' ? 'install' : 'add';\n\n  /** ======================== Step 1 Add dependencies required ======================== */\n  if (all) {\n    const [, ...missingDependencies] = checkRequiredContentInstalled('all', allDependenciesKeys);\n\n    if (missingDependencies.length) {\n      Logger.info(\n        `Adding required dependencies: ${[...missingDependencies]\n          .map((c) => chalk.underline(c))\n          .join(', ')}`\n      );\n\n      await exec(`${currentPkgManager} ${runCmd} ${[...missingDependencies].join(' ')}`);\n    }\n  } else {\n    const [, ..._missingDependencies] = checkRequiredContentInstalled(\n      'partial',\n      allDependenciesKeys\n    );\n    const missingDependencies = [\n      ..._missingDependencies,\n      ...components.map((c) => nextUIComponentsMap[c]!.package)\n    ];\n\n    Logger.info(\n      `Adding required dependencies: ${[...missingDependencies]\n        .map((c) => chalk.underline(c))\n        .join(', ')}`\n    );\n\n    await exec(`${currentPkgManager} ${runCmd} ${[...missingDependencies].join(' ')}`);\n  }\n\n  // After install the required dependencies, get the latest package information\n  var {allDependenciesKeys, currentComponents} = getPackageInfo(packagePath);\n\n  /** ======================== Step 2 Tailwind CSS Setup ======================== */\n  const type: SAFE_ANY = all ? 'all' : 'partial';\n\n  const isPnpm = currentPkgManager === 'pnpm';\n\n  if (!tailwindPath) {\n    const individualContent = individualTailwindRequired.content(currentComponents, isPnpm);\n    const template = tailwindTemplate(type, individualContent);\n    const tailwindPath = resolver('tailwind.config.js');\n\n    writeFileSync(tailwindPath, template, 'utf-8');\n\n    Logger.newLine();\n    Logger.info(`Tailwind CSS configuration file created at: ${tailwindPath}`);\n  } else {\n    const [, ...errorInfoList] = checkTailwind(type, tailwindPath, currentComponents, isPnpm);\n\n    fixTailwind(type, {errorInfoList, format: prettier, tailwindPath});\n\n    Logger.newLine();\n    Logger.info(`Tailwind CSS settings have been updated in: ${tailwindPath}`);\n  }\n\n  /** ======================== Step 3 Provider Need Manually Open ======================== */\n  if (addApp && appPath && existsSync(appPath)) {\n    const [isCorrectProvider] = checkApp(type, appPath);\n\n    if (!isCorrectProvider) {\n      fixProvider(appPath, {format: prettier});\n\n      Logger.newLine();\n      Logger.info(`NextUIProvider successfully added to the App file at: ${appPath}`);\n      Logger.warn(\n        \"Please check the placement of NextUIProvider in the App file to ensure it's correctly integrated.'\"\n      );\n    }\n  }\n\n  /** ======================== Step 4 Setup Pnpm ======================== */\n  if (currentPkgManager === 'pnpm') {\n    const npmrcPath = resolver('.npmrc');\n\n    if (!existsSync(npmrcPath)) {\n      writeFileSync(resolver('.npmrc'), pnpmRequired.content, 'utf-8');\n    } else {\n      const [isCorrectPnpm] = checkPnpm(npmrcPath);\n\n      if (!isCorrectPnpm) {\n        fixPnpm(npmrcPath);\n      }\n    }\n  }\n\n  // Finish adding the NextUI components\n  Logger.newLine();\n  Logger.success('✅ Components added successfully');\n\n  // Warn the user to check the NextUIProvider whether in the correct place\n  Logger.warn(\n    `Please check the ${chalk.bold(\n      'NextUIProvider'\n    )} whether in the correct place (ignore if added)\\nSee more info here: ${DOCS_PROVIDER_SETUP}`\n  );\n\n  // Check whether the user has installed the All NextUI components\n  if ((allDependenciesKeys.has(NEXT_UI) || all) && currentComponents.length) {\n    // Check whether have added redundant dependencies\n    Logger.newLine();\n    Logger.warn(\n      'Attention: Individual components from NextUI do not require the `@nextui-org/react` package. For optimized bundle sizes, consider using individual components.'\n    );\n    Logger.warn('The redundant dependencies are:');\n    currentComponents.forEach((component) => {\n      Logger.info(`- ${component.package}`);\n    });\n  }\n\n  process.exit(0);\n}\n","import type {RequiredKey, SAFE_ANY} from './type';\nimport type {ProblemRecord} from 'src/actions/doctor-action';\n\nimport {readFileSync} from 'fs';\n\nimport chalk from 'chalk';\n\nimport {\n  type NextUIComponents,\n  nextUIComponentsKeys,\n  nextUIComponentsKeysSet\n} from 'src/constants/component';\nimport {\n  DOCS_INSTALLED,\n  DOCS_TAILWINDCSS_SETUP,\n  FRAMER_MOTION,\n  NEXT_UI,\n  SYSTEM_UI,\n  TAILWINDCSS,\n  THEME_UI,\n  appRequired,\n  individualTailwindRequired,\n  pnpmRequired,\n  tailwindRequired\n} from 'src/constants/required';\n\nimport {Logger} from './logger';\nimport {getMatchArray, getMatchImport} from './match';\nimport {findMostMatchText} from './math-diff';\n\nexport type CheckType = 'all' | 'partial';\nexport type CombineType = 'missingDependencies' | 'incorrectTailwind' | 'incorrectApp';\n\ntype DefaultCombineOptions = {\n  errorInfo: string[];\n  missingDependencies: string[];\n  tailwindName: string;\n};\n\ntype CombineOptions<T extends CombineType> = T extends 'missingDependencies'\n  ? RequiredKey<Partial<DefaultCombineOptions>, 'missingDependencies'>\n  : T extends 'incorrectTailwind'\n  ? RequiredKey<Partial<DefaultCombineOptions>, 'errorInfo' | 'tailwindName'>\n  : T extends 'incorrectApp'\n  ? RequiredKey<Partial<DefaultCombineOptions>, 'errorInfo'>\n  : DefaultCombineOptions;\n\ntype CheckResult<T extends SAFE_ANY[] = SAFE_ANY[]> = [boolean, ...T];\n\nexport function combineProblemRecord<T extends CombineType = CombineType>(\n  type: T,\n  options: CombineOptions<T>\n): ProblemRecord {\n  const {errorInfo, missingDependencies, tailwindName} = options as DefaultCombineOptions;\n\n  if (type === 'missingDependencies') {\n    return {\n      level: 'error',\n      name: 'missingDependencies',\n      outputFn: () => {\n        Logger.error('You have not installed the required dependencies');\n        Logger.newLine();\n        Logger.info('The required dependencies are:');\n        missingDependencies.forEach((dependency) => {\n          Logger.info(`- ${dependency}`);\n        });\n        Logger.newLine();\n        Logger.info(`See more info here: ${DOCS_INSTALLED}`);\n      }\n    };\n  } else if (type === 'incorrectTailwind') {\n    return {\n      level: 'error',\n      name: 'incorrectTailwind',\n      outputFn: () => {\n        Logger.error(`Your ${tailwindName} is incorrect`);\n        Logger.newLine();\n        Logger.info('The missing part is:');\n        errorInfo.forEach((info) => {\n          Logger.info(`- need to add ${info}`);\n        });\n        Logger.newLine();\n        Logger.error(`See more info here: ${DOCS_TAILWINDCSS_SETUP}-1`);\n      }\n    };\n  } else {\n    return {\n      level: 'error',\n      name: 'incorrectApp',\n      outputFn: () => {\n        Logger.error('Your App.tsx is incorrect');\n        Logger.newLine();\n        Logger.info('The missing part is:');\n        errorInfo.forEach((info) => {\n          Logger.info(`- need to add ${info}`);\n        });\n        Logger.newLine();\n        Logger.error(`See more info here: ${DOCS_INSTALLED}`);\n      }\n    };\n  }\n}\n\n/**\n * Check if the required content is installed\n * @example return result and missing required [false, '@nextui-org/react', 'framer-motion']\n * @param type\n * @param dependenciesKeys\n * @returns\n */\nexport function checkRequiredContentInstalled(\n  type: CheckType,\n  dependenciesKeys: Set<string>\n): CheckResult {\n  const result = [] as unknown as CheckResult;\n\n  if (type === 'all') {\n    const hasAllComponents = dependenciesKeys.has(NEXT_UI);\n    const hasFramerMotion = dependenciesKeys.has(FRAMER_MOTION);\n    const hasTailwind = dependenciesKeys.has(TAILWINDCSS);\n\n    if (hasAllComponents && hasFramerMotion) {\n      return [true];\n    }\n    !hasAllComponents && result.push(NEXT_UI);\n    !hasFramerMotion && result.push(FRAMER_MOTION);\n    !hasTailwind && result.push(TAILWINDCSS);\n  } else if (type === 'partial') {\n    const hasFramerMotion = dependenciesKeys.has(FRAMER_MOTION);\n    const hasTailwind = dependenciesKeys.has(TAILWINDCSS);\n    const hasSystemUI = dependenciesKeys.has(SYSTEM_UI);\n    const hasThemeUI = dependenciesKeys.has(THEME_UI);\n\n    if (hasFramerMotion && hasSystemUI && hasThemeUI) {\n      return [true];\n    }\n    !hasFramerMotion && result.push(FRAMER_MOTION);\n    !hasSystemUI && result.push(SYSTEM_UI);\n    !hasThemeUI && result.push(THEME_UI);\n    !hasTailwind && result.push(TAILWINDCSS);\n  }\n\n  return [false, ...result];\n}\n\n/**\n * Check if the tailwind.config file is correct\n * @param type\n * @param tailwindPath\n * @param currentComponents\n * @returns\n */\nexport function checkTailwind(\n  type: 'all',\n  tailwindPath: string,\n  currentComponents?: NextUIComponents,\n  isPnpm?: boolean,\n  content?: string\n): CheckResult;\nexport function checkTailwind(\n  type: 'partial',\n  tailwindPath: string,\n  currentComponents: NextUIComponents,\n  isPnpm: boolean,\n  content?: string\n): CheckResult;\nexport function checkTailwind(\n  type: CheckType,\n  tailwindPath: string,\n  currentComponents?: NextUIComponents,\n  isPnpm?: boolean,\n  content?: string\n): CheckResult {\n  if (type === 'partial' && !currentComponents!.length) {\n    return [true];\n  }\n\n  const result = [] as unknown as CheckResult;\n\n  const tailwindContent = content ?? readFileSync(tailwindPath, 'utf-8');\n\n  const contentMatch = getMatchArray('content', tailwindContent);\n  const pluginsMatch = getMatchArray('plugins', tailwindContent);\n\n  if (type === 'all') {\n    // Check if the required content is added Detail: https://nextui.org/docs/guide/installation#global-installation\n    const isDarkModeCorrect = tailwindContent.match(/darkMode: [\"']\\w/);\n    const isContentCorrect = contentMatch.some((content) =>\n      content.includes(tailwindRequired.content)\n    );\n    const isPluginsCorrect = pluginsMatch.some((plugins) =>\n      plugins.includes(tailwindRequired.plugins)\n    );\n\n    if (isDarkModeCorrect && isContentCorrect && isPluginsCorrect) {\n      return [true];\n    }\n    !isDarkModeCorrect && result.push(tailwindRequired.darkMode);\n    !isContentCorrect && result.push(tailwindRequired.content);\n    !isPluginsCorrect && result.push(tailwindRequired.plugins);\n  } else if (type === 'partial') {\n    const individualContent = individualTailwindRequired.content(currentComponents!, isPnpm!);\n    const isContentCorrect = contentMatch.some((content) => content.includes(individualContent));\n    const isPluginsCorrect = pluginsMatch.some((plugins) =>\n      plugins.includes(tailwindRequired.plugins)\n    );\n\n    if (isContentCorrect && isPluginsCorrect) {\n      return [true];\n    }\n    !isContentCorrect && result.push(individualContent);\n    !isPluginsCorrect && result.push(tailwindRequired.plugins);\n  }\n\n  return [false, ...result];\n}\n\nexport function checkApp(type: CheckType, appPath: string): CheckResult {\n  const result = [] as unknown as CheckResult;\n\n  if (type === 'all' || type === 'partial') {\n    const appContent = readFileSync(appPath, 'utf-8');\n\n    const importArray = getMatchImport(appContent);\n    const isAppCorrect = importArray.some(([key]) => key!.includes(appRequired.import));\n\n    if (isAppCorrect) {\n      return [true];\n    }\n\n    !isAppCorrect && result.push(appRequired.import);\n  }\n\n  return [false, ...result];\n}\n\nexport function checkPnpm(npmrcPath: string): CheckResult {\n  const result = [] as unknown as CheckResult;\n\n  let content: string;\n\n  if (npmrcPath) {\n    try {\n      content = readFileSync(npmrcPath, 'utf-8');\n      const isPnpmCorrect = content.includes(pnpmRequired.content);\n\n      if (isPnpmCorrect) {\n        return [true];\n      }\n\n      !isPnpmCorrect && result.push(pnpmRequired.content);\n    } catch (error) {\n      result.push(`Error reading .npmrc file: ${npmrcPath} \\nError: ${error}`);\n    }\n\n    return [false, ...result];\n  }\n\n  return [false, ...result];\n}\n\nexport function checkIllegalComponents(components: string[], loggerError = true) {\n  const illegalList: [string, null | string][] = [];\n\n  for (const component of components) {\n    if (!nextUIComponentsKeysSet.has(component)) {\n      const matchComponent = findMostMatchText(nextUIComponentsKeys, component);\n\n      illegalList.push([component, matchComponent]);\n    }\n  }\n\n  if (illegalList.length) {\n    const [illegalComponents, matchComponents] = illegalList.reduce(\n      (acc, [illegalComponent, matchComponent]) => {\n        return [\n          acc[0] + chalk.underline(illegalComponent) + ', ',\n          acc[1] + (matchComponent ? chalk.underline(matchComponent) + ', ' : '')\n        ];\n      },\n      ['', '']\n    );\n\n    loggerError &&\n      Logger.prefix(\n        'error',\n        `Illegal components: ${illegalComponents.replace(/, $/, '')}${\n          matchComponents\n            ? `\\n${''.padEnd(12)}It may be a typo, did you mean ${matchComponents.replace(\n                /, $/,\n                ''\n              )}?`\n            : ''\n        }`\n      );\n\n    return false;\n  }\n\n  return true;\n}\n","import {existsSync} from 'fs';\n\nimport fg from 'fast-glob';\n\nimport {getPackageInfo} from '@helpers/package';\n\nimport {type NextUIComponent, type NextUIComponents} from './component';\nimport {resolver} from './path';\n\nexport const FRAMER_MOTION = 'framer-motion';\nexport const TAILWINDCSS = 'tailwindcss';\nexport const NEXT_UI = '@nextui-org/react';\nexport const THEME_UI = '@nextui-org/theme';\nexport const SYSTEM_UI = '@nextui-org/system';\nexport const ALL_COMPONENTS_REQUIRED = [NEXT_UI, FRAMER_MOTION] as const;\n\nexport const DOCS_INSTALLED = 'https://nextui.org/docs/guide/installation#global-installation';\nexport const DOCS_TAILWINDCSS_SETUP =\n  'https://nextui.org/docs/guide/installation#tailwind-css-setup';\nexport const DOCS_APP_SETUP = 'https://nextui.org/docs/guide/installation#provider-setup';\nexport const DOCS_PNPM_SETUP = 'https://nextui.org/docs/guide/installation#setup-pnpm-optional';\nexport const DOCS_PROVIDER_SETUP = 'https://nextui.org/docs/guide/installation#provider-setup';\n\n// Record the required content of tailwind.config file\nexport const tailwindRequired = {\n  content: './node_modules/@nextui-org/theme/dist/**/*.{js,ts,jsx,tsx}',\n  darkMode: 'darkMode: \"class\"',\n  importContent: (isTypescript = false) => {\n    if (isTypescript) {\n      return `import {nextui} from '@nextui-org/theme';`;\n    }\n\n    return `const {nextui} = require('@nextui-org/theme');`;\n  },\n  plugins: 'nextui()'\n} as const;\n\nexport const individualTailwindRequired = {\n  content: (currentComponents: NextUIComponents, isPnpm: boolean) => {\n    currentComponents.forEach((component) => {\n      const walkDeps = walkDepComponents(component, isPnpm) as NextUIComponents;\n\n      currentComponents.push(...walkDeps);\n    });\n\n    const outputComponents = [\n      ...new Set(\n        currentComponents.map((component) => {\n          return component.style || component.name;\n        })\n      )\n    ];\n\n    if (outputComponents.length === 1) {\n      return `./node_modules/@nextui-org/theme/dist/components/${currentComponents[0]}.js`;\n    }\n    const requiredContent = outputComponents\n      .reduce((acc, component) => {\n        return (acc += `${component}|`);\n      }, '')\n      .replace(/\\|$/, '');\n\n    return `./node_modules/@nextui-org/theme/dist/components/(${requiredContent}).js`;\n  },\n  plugins: 'nextui()'\n} as const;\n\nexport const appRequired = {\n  import: 'NextUIProvider'\n} as const;\n\nexport const pnpmRequired = {\n  content: 'public-hoist-pattern[]=*@nextui-org/*'\n} as const;\n\nexport function walkDepComponents(nextUIComponent: NextUIComponent, isPnpm: boolean) {\n  const component = nextUIComponent.name;\n  let componentPath = resolver(`node_modules/@nextui-org/${component}`);\n  const components = [nextUIComponent];\n\n  if (!existsSync(componentPath) && isPnpm) {\n    const pnpmDir = resolver('node_modules/.pnpm');\n\n    const file = fg.sync(`**/@nextui-org/${component}`, {\n      absolute: true,\n      cwd: pnpmDir,\n      onlyDirectories: true\n    })[0];\n\n    if (file) {\n      componentPath = file;\n    } else {\n      return components;\n    }\n  }\n\n  const {currentComponents} = getPackageInfo(`${componentPath}/package.json`);\n\n  if (currentComponents.length) {\n    for (const component of currentComponents) {\n      const result = walkDepComponents(component, isPnpm);\n\n      components.push(...result);\n    }\n  }\n\n  return components;\n}\n","import {readFileSync} from 'fs';\n\nimport {\n  type NextUIComponents,\n  nextUIComponents,\n  nextUIComponentsMap\n} from 'src/constants/component';\nimport {NEXT_UI} from 'src/constants/required';\nimport {getLatestVersion} from 'src/scripts/helpers';\n\nimport {exec} from './exec';\nimport {Logger} from './logger';\nimport {getVersionAndMode} from './utils';\n\n/**\n * Get the package information\n * @param packagePath string\n * @param transformVersion boolean\n */\nexport function getPackageInfo(packagePath: string, transformVersion = true) {\n  let pkg;\n\n  try {\n    pkg = JSON.parse(readFileSync(packagePath, 'utf-8'));\n  } catch (error) {\n    Logger.prefix('error', `Error reading package.json file: ${packagePath} \\nError: ${error}`);\n  }\n\n  const devDependencies = pkg.devDependencies || {};\n  const dependencies = pkg.dependencies || {};\n  const allDependencies = {...devDependencies, ...dependencies};\n  const allDependenciesKeys = new Set(Object.keys(allDependencies));\n\n  const currentComponents = (nextUIComponents as unknown as NextUIComponents).filter(\n    (component) => {\n      if (allDependenciesKeys.has(component.package)) {\n        const {currentVersion, versionMode} = getVersionAndMode(allDependencies, component.package);\n\n        component.version = transformVersion\n          ? `${currentVersion} new: ${component.version}`\n          : currentVersion;\n        component.versionMode = versionMode;\n\n        return true;\n      }\n\n      return false;\n    }\n  ) as NextUIComponents;\n  const isAllComponents = allDependenciesKeys.has(NEXT_UI);\n\n  return {\n    allDependencies,\n    allDependenciesKeys,\n    currentComponents,\n    dependencies,\n    devDependencies,\n    isAllComponents,\n    package: pkg\n  };\n}\n\nexport function transformComponentsToPackage(components: string[]) {\n  return components.map((component) => {\n    const nextuiComponent = nextUIComponentsMap[component];\n    const packageName = nextuiComponent?.package;\n\n    return packageName ? packageName : component;\n  });\n}\n\n/**\n * Get the package detail information\n * @param components need package name\n * @param allDependencies\n * @returns\n */\nexport async function transformPackageDetail(\n  components: string[],\n  allDependencies: Record<string, string>,\n  transformVersion = true\n): Promise<NextUIComponents> {\n  const result: NextUIComponents = [];\n\n  for (const component of components) {\n    let {currentVersion} = getVersionAndMode(allDependencies, component);\n    const {versionMode} = getVersionAndMode(allDependencies, component);\n    const docs = (\n      ((await exec(`npm show ${component} homepage`, {\n        logCmd: false,\n        stdio: 'pipe'\n      })) || '') as string\n    ).replace(/\\n/, '');\n    const description = (\n      ((await exec(`npm show ${component} description`, {\n        logCmd: false,\n        stdio: 'pipe'\n      })) || '') as string\n    ).replace(/\\n/, '');\n    const latestVersion = await getLatestVersion(component);\n\n    currentVersion = transformVersion ? `${currentVersion} new: ${latestVersion}` : currentVersion;\n\n    const detailPackageInfo: NextUIComponents[0] = {\n      description: description || '',\n      docs: docs || '',\n      name: component,\n      package: component,\n      status: 'stable',\n      style: '',\n      version: currentVersion,\n      versionMode: versionMode\n    };\n\n    result.push(detailPackageInfo);\n  }\n\n  return result;\n}\n","/**\n * Get the content of the key in the target string.\n * @example getMatchImport('import {test} from \"source\"') => [['test', 'source']]\n * @param str\n */\nexport function getMatchImport(str: string) {\n  const importRegexAll = /import {?\\s*([\\w\\W]+?)\\s*}? from ['\"](.+)['\"]/g;\n\n  const matchAll = str.match(importRegexAll) ?? [];\n  const result: string[][] = [];\n\n  for (const item of matchAll) {\n    result.push(matchImport(item));\n  }\n\n  return result.length ? result : [];\n\n  function matchImport(itemImport: string) {\n    const importRegex = /import {?\\s*([\\w\\W]+?)\\s*}? from ['\"](.+)['\"]/;\n    const match = itemImport.match(importRegex) ?? [];\n\n    return [match[1] ?? '', match[2] ?? ''];\n  }\n}\n\n/**\n * Get the array content of the key in the target string.\n * @example getMatchArray('key', 'key: [a, b, c]') => ['a', 'b', 'c']\n * @param key\n * @param target\n */\nexport function getMatchArray(key: string, target: string) {\n  const mixinReg = new RegExp(`\\\\s*${key}:\\\\s\\\\[([\\\\w\\\\W]*?)\\\\]\\\\s*`);\n\n  if (mixinReg.test(target))\n    return (\n      target\n        .match(mixinReg)?.[1]\n        ?.split(/,\\n/)\n        .map((i) => i.trim().replace(/[`'\"]/g, ''))\n        .filter(Boolean) ?? []\n    );\n\n  return [];\n}\n\n/**\n * Replace the array content of the key in the target string.\n * @example replaceMatchArray('key', 'key: [a, b, c]', ['d', 'e', 'f']) => 'key: [d, e, f]'\n * @param key\n * @param target\n * @param value\n */\nexport function replaceMatchArray(\n  key: string,\n  target: string,\n  value: string[],\n  _replaceValue?: string\n) {\n  const mixinReg = new RegExp(`\\\\s*${key}:\\\\s\\\\[([\\\\w\\\\W]*?)\\\\]\\\\s*`);\n  const replaceValue = _replaceValue ?? value.map((v) => JSON.stringify(v)).join(', ');\n\n  if (mixinReg.test(target)) {\n    const _value = key === 'content' ? `\\n  ${key}: [${replaceValue}]` : `\\n  ${key}: [${value}]`;\n\n    return target.replace(mixinReg, _value);\n  }\n\n  // If the key does not exist, add the key and value to the end of the target\n  const targetArray = target.split('\\n');\n  const contentIndex = targetArray.findIndex((item) => item.includes('content:'));\n  const moduleIndex = targetArray.findIndex((item) => item.includes('module.exports ='));\n  const insertIndex = contentIndex !== -1 ? contentIndex : moduleIndex !== -1 ? moduleIndex : 0;\n\n  key === 'content'\n    ? targetArray.splice(insertIndex + 1, 0, `  ${key}: [${replaceValue}],`)\n    : targetArray.splice(\n        insertIndex + 1,\n        0,\n        `  ${key}: [${value.map((v) => v.replace(/['\"`]/g, ''))}],`\n      );\n\n  return targetArray.join('\\n');\n}\n","import type {SAFE_ANY} from './type';\n\nimport path from 'node:path';\n\nimport {findUp} from 'find-up';\n\nimport {ROOT} from 'src/constants/path';\n\ntype TupleToUnion<T extends readonly SAFE_ANY[]> = T[number];\n\nexport const AGENTS = ['npm', 'bun', 'pnpm', 'yarn'] as const;\n\nexport type Agent = TupleToUnion<typeof AGENTS>;\n\nexport const agents = AGENTS;\n\n// the order here matters, more specific one comes first\nexport const LOCKS: Record<string, Agent> = {\n  'bun.lockb': 'bun',\n  'npm-shrinkwrap.json': 'npm',\n  'package-lock.json': 'npm',\n  'pnpm-lock.yaml': 'pnpm',\n  'yarn.lock': 'yarn'\n};\n\nexport async function detect(cwd = ROOT) {\n  let agent: Agent | null = 'npm';\n  const lockPath = await findUp(Object.keys(LOCKS), {cwd});\n\n  // detect based on lock\n  if (lockPath) {\n    agent = LOCKS[path.basename(lockPath)]!;\n  }\n\n  return agent;\n}\n","import type {CheckType} from './check';\n\nimport {execSync} from 'node:child_process';\nimport {readFileSync, writeFileSync} from 'node:fs';\n\nimport {pnpmRequired, tailwindRequired} from 'src/constants/required';\n\nimport {Logger} from './logger';\nimport {getMatchArray, replaceMatchArray} from './match';\n\ninterface FixTailwind {\n  errorInfoList: string[];\n  tailwindPath: string;\n  write?: boolean;\n  format?: boolean;\n}\n\ninterface FixProvider {\n  write?: boolean;\n  format?: boolean;\n}\n\nexport function fixProvider(appPath: string, options: FixProvider) {\n  const {format = false, write = true} = options;\n  let appContent = readFileSync(appPath, 'utf-8');\n\n  appContent = `import {NextUIProvider} from \"@nextui-org/react\";\\n${appContent}`;\n\n  appContent = wrapWithNextUIProvider(appContent);\n\n  write && writeFileSync(appPath, appContent, 'utf-8');\n  format && execSync(`npx prettier --write ${appPath}`, {stdio: 'ignore'});\n}\n\nfunction wrapWithNextUIProvider(content: string) {\n  const returnRegex = /return\\s*\\(([\\s\\S]*?)\\);/g;\n  const wrappedCode = content.replace(returnRegex, (_, p1) => {\n    return `return (\n      <NextUIProvider>\n        ${p1.trim()}\n      </NextUIProvider>\n    );`;\n  });\n\n  return wrappedCode;\n}\n\nexport function fixTailwind(type: CheckType, options: FixTailwind) {\n  const {errorInfoList, format = false, tailwindPath, write = true} = options;\n\n  if (!errorInfoList.length) {\n    return;\n  }\n\n  let tailwindContent = readFileSync(tailwindPath, 'utf-8');\n  let contentMatch = getMatchArray('content', tailwindContent);\n  const pluginsMatch = getMatchArray('plugins', tailwindContent);\n\n  for (const errorInfo of errorInfoList) {\n    const [errorType, info] = transformErrorInfo(errorInfo);\n\n    if (errorType === 'content') {\n      // Check if all the required content is added then skip\n      const allPublic = contentMatch.includes(tailwindRequired.content);\n\n      if (allPublic) continue;\n\n      contentMatch = contentMatch.filter((content) => !content.includes('@nextui-org/theme/dist/'));\n      contentMatch.push(info);\n      tailwindContent = replaceMatchArray(\n        'content',\n        tailwindContent,\n        contentMatch,\n        contentMatch\n          .map((v, index, arr) => {\n            // Add 4 spaces before the content\n            if (index === 0) {\n              if (arr.length === 1) {\n                return `\\n    ${JSON.stringify(v)}\\n`;\n              }\n\n              return `\\n    ${JSON.stringify(v)}`;\n            }\n            if (arr.length - 1 === index) {\n              return `    ${JSON.stringify(v)}\\n  `;\n            }\n\n            return `    ${JSON.stringify(v)}`;\n          })\n          .join(',\\n')\n      );\n    } else if (errorType === 'plugins') {\n      pluginsMatch.push(info);\n      tailwindContent = replaceMatchArray('plugins', tailwindContent, pluginsMatch);\n\n      // Add import content\n      const importContent = tailwindRequired.importContent(tailwindPath.endsWith('.ts'));\n\n      tailwindContent = `${importContent}\\n${tailwindContent}`;\n    }\n\n    if (type === 'all' && errorType === 'darkMode') {\n      // Add darkMode under the plugins content in tailwindContent\n      const darkModeIndex = tailwindContent.indexOf('plugins') - 1;\n      const darkModeContent = tailwindRequired.darkMode;\n\n      tailwindContent = `${tailwindContent.slice(\n        0,\n        darkModeIndex\n      )} ${darkModeContent},\\n${tailwindContent.slice(darkModeIndex)}`;\n    }\n  }\n\n  write && writeFileSync(tailwindPath, tailwindContent, 'utf-8');\n\n  if (format) {\n    try {\n      execSync(`npx prettier --write ${tailwindPath}`, {stdio: 'ignore'});\n    } catch (error) {\n      Logger.warn(`Prettier failed to format ${tailwindPath}`);\n    }\n  }\n}\n\nfunction transformErrorInfo(errorInfo: string): [keyof typeof tailwindRequired, string] {\n  if (tailwindRequired.darkMode.includes(errorInfo)) {\n    return ['darkMode', errorInfo];\n  } else if (tailwindRequired.plugins.includes(errorInfo)) {\n    return ['plugins', errorInfo];\n  } else {\n    return ['content', errorInfo];\n  }\n}\n\nexport function fixPnpm(npmrcPath: string, write = true, runInstall = true) {\n  let content = readFileSync(npmrcPath, 'utf-8');\n\n  content = `${pnpmRequired.content}\\n${content}`;\n\n  write && writeFileSync(npmrcPath, content, 'utf-8');\n  Logger.newLine();\n  Logger.info(`Added the required content in file: ${npmrcPath}`);\n\n  if (runInstall) {\n    Logger.newLine();\n    Logger.info('Pnpm restructure will be run now');\n    runInstall && execSync('pnpm install', {stdio: 'inherit'});\n  }\n}\n","import type {CheckType} from '@helpers/check';\n\nexport const APP_REPO = 'https://codeload.github.com/nextui-org/next-app-template/tar.gz/main';\nexport const PAGES_REPO = 'https://codeload.github.com/nextui-org/next-pages-template/tar.gz/main';\n\nexport const APP_DIR = 'next-app-template-main';\nexport const PAGES_DIR = 'next-pages-template-main';\n\nexport function tailwindTemplate(type: 'all', content?: string): string;\nexport function tailwindTemplate(type: 'partial', content: string): string;\nexport function tailwindTemplate(type: CheckType, content?: string) {\n  if (type === 'all') {\n    return `// tailwind.config.js\nconst {nextui} = require(\"@nextui-org/react\");\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    \"./node_modules/@nextui-org/theme/dist/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  darkMode: \"class\",\n  plugins: [nextui()],\n};`;\n  } else {\n    return `// tailwind.config.js\nconst {nextui} = require(\"@nextui-org/theme\");\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    ${JSON.stringify(content)},\n  ],\n  theme: {\n    extend: {},\n  },\n  darkMode: \"class\",\n  plugins: [nextui()],\n};`;\n  }\n}\n","import chalk from 'chalk';\nimport prompts from 'prompts';\n\nimport {Logger} from '@helpers/logger';\n\nconst defaultPromptOptions: prompts.Options = {\n  onCancel: () => {\n    Logger.log(`${chalk.red('✖')} Operation cancelled`);\n    process.exit(0);\n  }\n};\n\nexport async function getInput(message: string, choices?: prompts.Choice[]) {\n  const result = await prompts(\n    {\n      message,\n      name: 'value',\n      type: 'autocomplete',\n      ...(choices ? {choices} : {})\n    },\n    defaultPromptOptions\n  );\n\n  return result.value;\n}\n\nexport async function getAutocompleteMultiselect(message: string, choices?: prompts.Choice[]) {\n  const result = await prompts(\n    {\n      hint: '- Space to select. Return to submit',\n      message,\n      min: 1,\n      name: 'value',\n      type: 'autocompleteMultiselect',\n      ...(choices ? {choices} : {})\n    },\n    defaultPromptOptions\n  );\n\n  return result.value;\n}\n\nexport async function getSelect(message: string, choices: prompts.Choice[]) {\n  const result = await prompts(\n    {\n      message,\n      name: 'value',\n      type: 'select',\n      ...(choices ? {choices} : {})\n    },\n    defaultPromptOptions\n  );\n\n  return result.value;\n}\n","import {basename} from 'path';\n\nimport chalk from 'chalk';\n\nimport {\n  checkApp,\n  checkPnpm,\n  checkRequiredContentInstalled,\n  checkTailwind,\n  combineProblemRecord\n} from '@helpers/check';\nimport {detect} from '@helpers/detect';\nimport {Logger, type PrefixLogType} from '@helpers/logger';\nimport {getPackageInfo} from '@helpers/package';\nimport {findFiles, transformOption} from '@helpers/utils';\nimport {resolver} from 'src/constants/path';\nimport {DOCS_PNPM_SETUP, DOCS_TAILWINDCSS_SETUP} from 'src/constants/required';\n\ninterface DoctorActionOptions {\n  packagePath?: string;\n  tailwindPath?: string;\n  appPath?: string;\n  checkApp?: boolean | 'false';\n  checkTailwind?: boolean | 'false';\n  checkPnpm?: boolean | 'false';\n}\n\nexport interface ProblemRecord {\n  name: string;\n  level: Extract<PrefixLogType, 'error' | 'warn'>;\n  outputFn: () => void;\n}\n\nexport async function doctorAction(options: DoctorActionOptions) {\n  const {\n    appPath = findFiles('**/App.(j|t)sx')[0],\n    checkApp: _enableCheckApp = false,\n    checkPnpm: _enableCheckPnpm = true,\n    checkTailwind: _enableCheckTailwind = true,\n    packagePath = resolver('package.json'),\n    tailwindPath = findFiles('**/tailwind.config.(j|t)s')\n  } = options;\n  const enableCheckApp = transformOption(_enableCheckApp);\n  const enableCheckPnpm = transformOption(_enableCheckPnpm);\n  const enableCheckTailwind = transformOption(_enableCheckTailwind);\n  const tailwindPaths = [tailwindPath].flat();\n\n  const {allDependenciesKeys, currentComponents, isAllComponents} = getPackageInfo(packagePath);\n\n  /** ======================== Output when there is no components installed ======================== */\n  if (!currentComponents.length && !isAllComponents) {\n    Logger.prefix(\n      'error',\n      `❌ No ${chalk.underline(\n        'NextUI components'\n      )} found in your project. Please consult the installation guide at: https://nextui.org/docs/guide/installation#global-installation`\n    );\n\n    return;\n  }\n\n  /** ======================== Problem record ======================== */\n  const problemRecord: ProblemRecord[] = [];\n\n  /** ======================== Check whether installed redundant dependencies ======================== */\n  if (isAllComponents && currentComponents.length) {\n    problemRecord.push({\n      level: 'warn',\n      name: 'redundantDependencies',\n      outputFn: () => {\n        Logger.warn(\n          'You have installed some unnecessary dependencies. Consider removing them for optimal performance.'\n        );\n        Logger.newLine();\n        Logger.info('The following dependencies are redundant:');\n        currentComponents.forEach((component) => {\n          Logger.info(`- ${component.package}`);\n        });\n      }\n    });\n  }\n  // If there is no tailwind.config file\n  if (enableCheckTailwind && !tailwindPaths.length) {\n    problemRecord.push({\n      level: 'error',\n      name: 'missingTailwind',\n      outputFn: () => {\n        Logger.error(\n          'Missing tailwind.config.(j|t)s file. To set up, visit: ' + DOCS_TAILWINDCSS_SETUP\n        );\n      }\n    });\n  }\n  // If there is no App.tsx\n  if (enableCheckApp && !appPath) {\n    problemRecord.push({\n      level: 'error',\n      name: 'missingApp',\n      outputFn: () => {\n        Logger.error(\n          'App.(j|t)sx file not found. Please specify the path using: doctor --appPath=[yourAppPath]'\n        );\n      }\n    });\n  }\n\n  /** ======================== Check if the allComponents required dependencies installed ======================== */\n  if (isAllComponents) {\n    // Check if framer-motion allComponents is installed\n    const [isCorrectInstalled, ...missingDependencies] = checkRequiredContentInstalled(\n      'all',\n      allDependenciesKeys\n    );\n\n    if (!isCorrectInstalled) {\n      problemRecord.push(combineProblemRecord('missingDependencies', {missingDependencies}));\n    }\n\n    // Check whether tailwind.config file is correct\n    if (enableCheckTailwind) {\n      for (const tailwindPath of tailwindPaths) {\n        const [isCorrectTailwind, ...errorInfo] = checkTailwind('all', tailwindPath);\n\n        if (!isCorrectTailwind) {\n          const tailwindName = basename(tailwindPath);\n\n          problemRecord.push(combineProblemRecord('incorrectTailwind', {errorInfo, tailwindName}));\n        }\n      }\n    }\n\n    // Check whether the App.tsx is correct\n    if (enableCheckApp && appPath) {\n      const [isAppCorrect, ...errorInfo] = checkApp('all', appPath);\n\n      if (!isAppCorrect) {\n        problemRecord.push(combineProblemRecord('incorrectApp', {errorInfo}));\n      }\n    }\n  } else if (currentComponents.length) {\n    // Individual components check\n    const [isCorrectInstalled, ...missingDependencies] = checkRequiredContentInstalled(\n      'partial',\n      allDependenciesKeys\n    );\n\n    if (!isCorrectInstalled) {\n      problemRecord.push(combineProblemRecord('missingDependencies', {missingDependencies}));\n    }\n\n    // Check whether tailwind.config file is correct\n    if (enableCheckTailwind) {\n      const isPnpm = (await detect()) === 'pnpm';\n\n      for (const tailwindPath of tailwindPaths) {\n        const [isCorrectTailwind, ...errorInfo] = checkTailwind(\n          'partial',\n          tailwindPath,\n          currentComponents,\n          isPnpm\n        );\n\n        if (!isCorrectTailwind) {\n          const tailwindName = basename(tailwindPath);\n\n          problemRecord.push(combineProblemRecord('incorrectTailwind', {errorInfo, tailwindName}));\n        }\n      }\n    }\n\n    // Check whether the App.tsx is correct\n    if (enableCheckApp && appPath) {\n      const [isAppCorrect, ...errorInfo] = checkApp('partial', appPath);\n\n      if (!isAppCorrect) {\n        problemRecord.push(combineProblemRecord('incorrectApp', {errorInfo}));\n      }\n    }\n  }\n\n  /** ======================== Check whether Pnpm setup is correct ======================== */\n  if (enableCheckPnpm) {\n    const currentPkgManager = await detect();\n\n    if (currentPkgManager === 'pnpm') {\n      const npmrcPath = resolver('.npmrc');\n\n      const [isCorrect, ...errorInfo] = checkPnpm(npmrcPath);\n\n      if (!isCorrect) {\n        problemRecord.push({\n          level: 'error',\n          name: 'incorrectPnpm',\n          outputFn: () => {\n            Logger.error(\n              'The pnpm setup is incorrect. Please update your configuration according to the guidelines provided at: ' +\n                DOCS_PNPM_SETUP\n            );\n            Logger.newLine();\n            Logger.info('Required changes:');\n            errorInfo.forEach((info) => {\n              Logger.info(`- Add ${info}`);\n            });\n          }\n        });\n      }\n    }\n  }\n\n  /** ======================== Return when there is no problem ======================== */\n  if (!problemRecord.length) {\n    Logger.success('✅ Your project has no detected issues.');\n\n    return;\n  }\n\n  /** ======================== Output the problem record ======================== */\n  Logger.prefix(\n    'error',\n    `❌ Your project has ${chalk.underline(problemRecord.length)} issue${\n      problemRecord.length === 1 ? '' : 's'\n    } that require attention`\n  );\n  Logger.newLine();\n\n  for (let index = 0; index < problemRecord.length; index++) {\n    const problem = problemRecord[index] as ProblemRecord;\n\n    Logger[problem.level](`❗️Issue ${index + 1}: ${chalk.bold(problem.name)}`);\n    Logger.newLine();\n    problem.outputFn();\n    Logger.newLine();\n  }\n\n  process.exit(0);\n}\n","import {outputComponents, outputInfo} from '@helpers/output-info';\nimport {getPackageInfo} from '@helpers/package';\nimport {resolver} from 'src/constants/path';\n\ninterface EnvActionOptions {\n  packagePath?: string;\n}\n\nexport async function envAction(options: EnvActionOptions) {\n  const {packagePath = resolver('package.json')} = options;\n\n  const {currentComponents} = getPackageInfo(packagePath);\n\n  /** ======================== Output the current components ======================== */\n  outputComponents({components: currentComponents});\n\n  /** ======================== Output the system environment info ======================== */\n  outputInfo();\n\n  process.exit(0);\n}\n","import {rename} from 'fs';\n\nimport chalk from 'chalk';\nimport {oraPromise} from 'ora';\n\nimport {downloadTemplate} from '@helpers/fetch';\nimport {Logger} from '@helpers/logger';\n\nimport {ROOT} from '../../src/constants/path';\nimport {APP_DIR, APP_REPO, PAGES_DIR, PAGES_REPO} from '../../src/constants/templates';\nimport {getSelect} from '../../src/prompts';\n\nexport interface InitActionOptions {\n  template?: 'app' | 'pages';\n  package?: 'npm' | 'yarn' | 'pnpm';\n}\n\nexport async function initAction(projectName: string, options: InitActionOptions) {\n  let {package: packageName, template} = options;\n\n  if (!template) {\n    template = await getSelect('Select a template', [\n      {\n        description:\n          'A Next.js 13 with app directory template pre-configured with NextUI (v2) and Tailwind CSS.',\n        title: chalk.blue('App'),\n        value: 'app'\n      },\n      {\n        description:\n          'A Next.js 13 with pages directory template pre-configured with NextUI (v2) and Tailwind CSS.',\n        title: chalk.red('Pages'),\n        value: 'pages'\n      }\n    ]);\n  }\n  if (!packageName) {\n    /** ======================== TODO:(winches)Temporary use npm with default value ======================== */\n    packageName = 'npm';\n    // packageName = await getSelect('Select a package manager', [\n    //   {\n    //     title: chalk.blue('NPM'),\n    //     value: 'npm'\n    //   },\n    //   {\n    //     title: chalk.red('Yarn'),\n    //     value: 'yarn'\n    //   },\n    //   {\n    //     title: chalk.magenta('PNPM'),\n    //     value: 'pnpm'\n    //   }\n    // ]);\n  }\n\n  /** ======================== Generate template ======================== */\n  if (template === 'app') {\n    await generateTemplate(APP_REPO);\n    projectName && renameTemplate(APP_DIR, projectName);\n  } else if (template === 'pages') {\n    await generateTemplate(PAGES_REPO);\n    projectName && renameTemplate(PAGES_DIR, projectName);\n  }\n\n  process.exit(0);\n}\n\nasync function generateTemplate(url: string) {\n  await oraPromise(downloadTemplate(ROOT, url), {\n    failText(error) {\n      Logger.prefix('error', `downloadTemplate Error: ${error}`);\n      process.exit(1);\n    },\n    successText: (() => {\n      Logger.newLine();\n\n      return chalk.greenBright('Template created successfully!');\n    })(),\n    text: 'Creating template...'\n  });\n}\n\nfunction renameTemplate(originName: string, projectName: string) {\n  rename(`${ROOT}/${originName}`, `${ROOT}/${projectName}`, (err) => {\n    if (err) {\n      Logger.prefix('warn', `rename Error: ${err}`);\n    }\n  });\n}\n","import {Readable} from 'stream';\nimport {pipeline} from 'stream/promises';\n\nimport retry from 'async-retry';\nimport tar from 'tar';\n\n/**\n * Fetch the tar stream from the specified URL.\n * @param url\n */\nasync function fetchTarStream(url: string) {\n  const res = await fetch(url);\n\n  if (!res.body) {\n    throw new Error(`Failed to download: ${url}`);\n  }\n\n  return Readable.fromWeb(res.body);\n}\n\n/**\n * Download the template from the specified URL and extract it to the specified directory.\n * @param root\n * @param url\n */\nexport async function downloadTemplate(root: string, url: string) {\n  await retry(\n    async (bail) => {\n      try {\n        await pipeline(\n          await fetchTarStream(url),\n          tar.x({\n            cwd: root\n          })\n        );\n      } catch (error) {\n        bail(new Error(`Failed to download ${url} Error: ${error}`));\n      }\n    },\n    {\n      retries: 3\n    }\n  );\n}\n","import {Logger} from '@helpers/logger';\nimport {outputComponents} from '@helpers/output-info';\nimport {getPackageInfo} from '@helpers/package';\n\nimport {type NextUIComponents, nextUIComponents} from '../../src/constants/component';\nimport {resolver} from '../../src/constants/path';\n\ninterface ListActionOptions {\n  remote?: boolean;\n  packagePath?: string;\n}\n\nexport async function listAction(options: ListActionOptions) {\n  const {packagePath = resolver('package.json'), remote = false} = options;\n\n  let components = nextUIComponents as NextUIComponents;\n\n  try {\n    /** ======================== Get the installed components ======================== */\n    if (!remote) {\n      const {currentComponents} = await getPackageInfo(packagePath);\n\n      components = currentComponents;\n    }\n\n    if (!components.length) {\n      Logger.warn(`No NextUI components detected in the specified package.json at: ${packagePath}`);\n\n      return;\n    }\n\n    /** ======================== Output the components ======================== */\n    remote ? outputComponents({commandName: 'list', components}) : outputComponents({components});\n  } catch (error) {\n    Logger.prefix('error', `An error occurred while attempting to list the components: ${error}`);\n  }\n\n  process.exit(0);\n}\n","/* eslint-disable no-var */\nimport type {SAFE_ANY} from '@helpers/type';\n\nimport {existsSync, readFileSync, writeFileSync} from 'fs';\n\nimport chalk from 'chalk';\n\nimport {checkIllegalComponents} from '@helpers/check';\nimport {detect} from '@helpers/detect';\nimport {Logger} from '@helpers/logger';\nimport {outputComponents} from '@helpers/output-info';\nimport {\n  getPackageInfo,\n  transformComponentsToPackage,\n  transformPackageDetail\n} from '@helpers/package';\nimport {removeDependencies, removeTailwind} from '@helpers/remove';\nimport {findFiles} from '@helpers/utils';\nimport {resolver} from 'src/constants/path';\nimport {\n  DOCS_PROVIDER_SETUP,\n  NEXT_UI,\n  SYSTEM_UI,\n  THEME_UI,\n  pnpmRequired\n} from 'src/constants/required';\nimport {getAutocompleteMultiselect, getSelect} from 'src/prompts';\n\ninterface RemoveOptionsAction {\n  packagePath: string;\n  all?: boolean;\n  tailwindPath?: string;\n  prettier?: boolean;\n}\n\nexport async function removeAction(components: string[], options: RemoveOptionsAction) {\n  const {\n    all = false,\n    packagePath = resolver('package.json'),\n    prettier = false,\n    tailwindPath = findFiles('**/tailwind.config.(j|t)s')[0]\n  } = options;\n\n  var {allDependencies, currentComponents} = getPackageInfo(packagePath);\n  const packageManager = await detect();\n\n  let isNextUIAll = !!allDependencies[NEXT_UI];\n\n  // If no Installed NextUI components then exit\n  if (!currentComponents.length && !isNextUIAll) {\n    Logger.prefix('error', `No NextUI components detected in your package.json at: ${packagePath}`);\n\n    return;\n  }\n\n  if (all || isNextUIAll) {\n    components = isNextUIAll ? [NEXT_UI] : currentComponents.map((component) => component.package);\n  } else if (!components.length) {\n    components = await getAutocompleteMultiselect(\n      'Select the components to remove',\n      currentComponents.map((component) => {\n        return {\n          title: component.package,\n          value: component.package\n        };\n      })\n    );\n  } else {\n    // Check if the custom input components are valid\n    if (!checkIllegalComponents(components)) {\n      return;\n    }\n\n    // Transform components to package\n    components = transformComponentsToPackage(components);\n  }\n\n  // Ask user whether need to remove these components\n  const filteredComponents = components.includes(NEXT_UI)\n    ? await transformPackageDetail(components, allDependencies)\n    : currentComponents.filter((component) =>\n        components.some((c) => c.includes(component.package) || c.includes(component.name))\n      );\n\n  outputComponents({\n    components: filteredComponents,\n    message: chalk.yellowBright('❗️ Components slated for removal:')\n  });\n\n  const isRemove = await getSelect('Confirm removal of these components:', [\n    {title: 'Yes', value: true},\n    {title: 'No', value: false}\n  ]);\n\n  if (!isRemove) {\n    // Exit the process\n    process.exit(0);\n  }\n\n  /** ======================== Step 1 Remove dependencies ======================== */\n  const removeDepList: string[] = [...components];\n  const filterComponents = currentComponents.filter((c) => !components.includes(c.package));\n\n  if (!filterComponents.length) {\n    // Remove the selected components if not components leave then remove the theme-ui and system-ui\n    allDependencies[THEME_UI] && removeDepList.push(THEME_UI);\n    allDependencies[SYSTEM_UI] && removeDepList.push(SYSTEM_UI);\n  }\n\n  await removeDependencies(removeDepList, packageManager);\n\n  /** ======================== Step 2 Remove the content ======================== */\n  // Get the new package information\n  var {allDependencies, currentComponents} = getPackageInfo(packagePath, false);\n\n  isNextUIAll = !!allDependencies[NEXT_UI];\n\n  const type: SAFE_ANY = isNextUIAll ? 'all' : 'partial';\n\n  removeTailwind(type, {\n    currentComponents,\n    isNextUIAll,\n    isPnpm: packageManager === 'pnpm',\n    prettier,\n    tailwindPath: tailwindPath!\n  });\n\n  /** ======================== Step 3 Remove the pnpm ======================== */\n  if (!currentComponents.length && !isNextUIAll) {\n    if (packageManager === 'pnpm') {\n      const npmrcPath = resolver('.npmrc');\n\n      if (existsSync(npmrcPath)) {\n        let content = readFileSync(npmrcPath, 'utf-8');\n\n        content = content.replace(pnpmRequired.content, '');\n\n        Logger.newLine();\n        Logger.info('Removing specified .npmrc file content');\n\n        writeFileSync(npmrcPath, content, 'utf-8');\n      }\n    }\n\n    Logger.newLine();\n    Logger.warn(\n      `No NextUI components remain installed. Ensure the NextUIProvider is also removed if necessary.\\nFor more information, visit: ${DOCS_PROVIDER_SETUP}`\n    );\n  }\n\n  Logger.newLine();\n\n  Logger.success(\n    `✅ Successfully removed the specified NextUI components: ${components\n      .map((c) => chalk.underline(c))\n      .join(', ')}`\n  );\n\n  process.exit(0);\n}\n","import type {NextUIComponents} from 'src/constants/component';\n\nimport {existsSync, readFileSync, writeFileSync} from 'fs';\n\nimport {type CheckType, checkTailwind} from './check';\nimport {exec} from './exec';\nimport {fixTailwind} from './fix';\nimport {Logger} from './logger';\nimport {getMatchArray, replaceMatchArray} from './match';\nimport {getPackageManagerInfo} from './utils';\n\nexport async function removeDependencies(components: string[], packageManager: string) {\n  const {remove} = getPackageManagerInfo(packageManager);\n\n  await exec(\n    `${packageManager} ${remove} ${components.reduce(\n      (acc, component) => `${acc} ${component}`,\n      ''\n    )}`\n  );\n\n  return;\n}\n\nexport async function removeTailwind(\n  type: CheckType,\n  options: {\n    tailwindPath?: string;\n    currentComponents: NextUIComponents;\n    isPnpm: boolean;\n    prettier: boolean;\n    isNextUIAll: boolean;\n  }\n) {\n  const {currentComponents, isNextUIAll, isPnpm, prettier, tailwindPath} = options;\n\n  if (tailwindPath && !existsSync(tailwindPath)) {\n    Logger.prefix('warn', `No tailwind.config.(j|t)s found remove action skipped`);\n\n    return;\n  }\n\n  let tailwindContent = readFileSync(tailwindPath!, 'utf-8');\n  const contentMatch = getMatchArray('content', tailwindContent);\n  const pluginsMatch = getMatchArray('plugins', tailwindContent);\n\n  // Not installed NextUI components then remove the tailwind content about nextui\n  if (!currentComponents.length && !isNextUIAll) {\n    const index = pluginsMatch.findIndex((c) => c.includes('nextui'));\n\n    index !== -1 && pluginsMatch.splice(index, 1);\n    tailwindContent = replaceMatchArray('plugins', tailwindContent, pluginsMatch);\n\n    // Remove the import nextui content\n    tailwindContent = tailwindContent.replace(/(const|var|let|import)[\\w\\W]+?nextui.*?;\\n/, '');\n  }\n  // Remove the nextui content\n  while (contentMatch.some((c) => c.includes('nextui'))) {\n    contentMatch.splice(\n      contentMatch.findIndex((c) => c.includes('nextui')),\n      1\n    );\n  }\n  tailwindContent = replaceMatchArray('content', tailwindContent, contentMatch);\n  //  if (!currentComponents.length && isNextUIAll) {\n  //   const index = contentMatch.findIndex(c => c.includes('nextui'));\n\n  //   // Remove the nextui content\n  //   index !== -1 &&\n  //     contentMatch.splice(\n  //       contentMatch.indexOf('./node_modules/@nextui-org/theme/dist/components'),\n  //       1\n  //     );\n  //   tailwindContent = replaceMatchArray('content', tailwindContent, contentMatch);\n  // } else if (!isNextUIAll && currentComponents.length) {\n  //   const index = contentMatch.indexOf(tailwindRequired.content);\n\n  //   // Remove the nextui content\n  //   index !== -1 && contentMatch.splice(index, 1);\n  //   tailwindContent = replaceMatchArray('content', tailwindContent, contentMatch);\n  // }\n  // Write the tailwind content\n  writeFileSync(tailwindPath!, tailwindContent, 'utf-8');\n\n  const [, ...errorInfoList] = checkTailwind(\n    type as 'partial',\n    tailwindPath!,\n    currentComponents,\n    isPnpm\n  );\n\n  fixTailwind(type, {errorInfoList, format: prettier, tailwindPath: tailwindPath!});\n\n  Logger.newLine();\n  Logger.info(`Remove the removed components tailwind content in file: ${tailwindPath}`);\n}\n","import type {AppendKeyValue} from '@helpers/type';\n\nimport chalk from 'chalk';\n\nimport {checkIllegalComponents} from '@helpers/check';\nimport {detect} from '@helpers/detect';\nimport {exec} from '@helpers/exec';\nimport {Logger} from '@helpers/logger';\nimport {getPackageInfo} from '@helpers/package';\nimport {upgrade} from '@helpers/upgrade';\nimport {getColorVersion, getPackageManagerInfo} from '@helpers/utils';\nimport {type NextUIComponents, nextUIComponentsMap} from 'src/constants/component';\nimport {resolver} from 'src/constants/path';\nimport {NEXT_UI} from 'src/constants/required';\nimport {getAutocompleteMultiselect, getSelect} from 'src/prompts';\nimport {getLatestVersion} from 'src/scripts/helpers';\n\ninterface UpgradeActionOptions {\n  packagePath?: string;\n  all?: boolean;\n  major?: boolean;\n  minor?: boolean;\n  patch?: boolean;\n}\n\nexport async function upgradeAction(components: string[], options: UpgradeActionOptions) {\n  const {all = false, packagePath = resolver('package.json')} = options;\n  const {allDependencies, currentComponents} = getPackageInfo(packagePath, false);\n\n  const isNextUIAll = !!allDependencies[NEXT_UI];\n\n  const transformComponents: Required<\n    AppendKeyValue<NextUIComponents[0], 'latestVersion', string> & {isLatest: boolean}\n  >[] = [];\n\n  for (const component of currentComponents) {\n    const latestVersion = await getLatestVersion(component.package);\n\n    transformComponents.push({\n      ...component,\n      isLatest: component.version === latestVersion,\n      latestVersion\n    });\n  }\n\n  // If no Installed NextUI components then exit\n  if (!transformComponents.length && !isNextUIAll) {\n    Logger.prefix('error', `No NextUI components detected in your package.json at: ${packagePath}`);\n\n    return;\n  }\n\n  if (isNextUIAll) {\n    components = [NEXT_UI];\n  } else if (all) {\n    components = currentComponents.map((component) => component.package);\n  } else if (!components.length) {\n    components = await getAutocompleteMultiselect(\n      'Select the components to upgrade',\n      transformComponents.map((component) => {\n        const isUpToDate = component.version === component.latestVersion;\n\n        return {\n          disabled: isUpToDate,\n          title: `${component.package} ${\n            isUpToDate\n              ? chalk.greenBright('Already up to date')\n              : `${chalk.gray(`${component.version} ->`)} ${getColorVersion(\n                  component.version,\n                  component.latestVersion\n                )}`\n          }`,\n          value: component.package\n        };\n      })\n    );\n  } else {\n    // Check if the components are valid\n    if (!checkIllegalComponents(components)) {\n      return;\n    }\n  }\n\n  components = components.map((c) => {\n    if (nextUIComponentsMap[c]?.package) {\n      return nextUIComponentsMap[c]!.package;\n    }\n\n    return c;\n  });\n\n  /** ======================== Upgrade ======================== */\n  const upgradeOptionList = transformComponents.filter((c) => components.includes(c.package));\n\n  const result = await upgrade({\n    allDependencies,\n    isNextUIAll,\n    upgradeOptionList\n  });\n\n  if (result.length) {\n    const isExecute = await getSelect('Would you like to proceed with the upgrade?', [\n      {\n        title: 'Yes',\n        value: true\n      },\n      {title: 'No', value: false}\n    ]);\n\n    if (isExecute) {\n      const packageManager = await detect();\n      const {install} = getPackageManagerInfo(packageManager);\n\n      await exec(\n        `${packageManager} ${install} ${result.reduce((acc, component) => {\n          return `${acc} ${component.package}@${component.latestVersion}`;\n        }, '')}`\n      );\n    }\n  }\n\n  Logger.newLine();\n  Logger.success('✅ Upgrade complete. All components are up to date.');\n\n  process.exit(0);\n}\n","import type {RequiredKey, SAFE_ANY} from './type';\n\nimport chalk from 'chalk';\n\nimport {NEXT_UI} from 'src/constants/required';\nimport {getLatestVersion} from 'src/scripts/helpers';\n\nimport {outputBox} from './output-info';\nimport {getColorVersion, getVersionAndMode} from './utils';\n\ninterface UpgradeOption {\n  package: string;\n  version: string;\n  latestVersion: string;\n  isLatest: boolean;\n  versionMode: string;\n}\n\nconst DEFAULT_SPACE = ''.padEnd(7);\n\nexport function getUpgradeVersion(upgradeOptionList: UpgradeOption[]) {\n  if (!upgradeOptionList.length) {\n    return '';\n  }\n\n  const output: string[] = [];\n\n  const optionMaxLenMap = {\n    latestVersion: 0,\n    package: 0,\n    version: 0\n  };\n\n  for (const upgradeOption of upgradeOptionList) {\n    for (const key in upgradeOption) {\n      optionMaxLenMap[key] = Math.max(optionMaxLenMap[key], upgradeOption[key].length);\n    }\n  }\n\n  for (const upgradeOption of upgradeOptionList) {\n    if (upgradeOption.isLatest) {\n      output.push(\n        `  ${chalk.white(\n          `${`${upgradeOption.package}@${upgradeOption.versionMode || ''}${\n            upgradeOption.latestVersion\n          }`.padEnd(optionMaxLenMap.package + DEFAULT_SPACE.length + DEFAULT_SPACE.length)}`\n        )}${chalk.greenBright('latest').padStart(optionMaxLenMap.version)}${DEFAULT_SPACE}`\n      );\n      continue;\n    }\n    output.push(\n      `  ${chalk.white(\n        `${upgradeOption.package.padEnd(\n          optionMaxLenMap.package + DEFAULT_SPACE.length\n        )}${DEFAULT_SPACE}${upgradeOption.versionMode || ''}${upgradeOption.version.padStart(\n          optionMaxLenMap.version\n        )}  ->  ${upgradeOption.versionMode || ''}${upgradeOption.latestVersion}`\n      )}${DEFAULT_SPACE}`\n    );\n  }\n\n  return output.join('\\n');\n}\n\ninterface Upgrade {\n  isNextUIAll: boolean;\n  allDependencies?: Record<string, SAFE_ANY>;\n  upgradeOptionList?: UpgradeOption[];\n}\n\ntype ExtractUpgrade<T extends Upgrade> = T extends {isNextUIAll: infer U}\n  ? U extends true\n    ? RequiredKey<Upgrade, 'allDependencies'>\n    : RequiredKey<Upgrade, 'upgradeOptionList'>\n  : T;\n\nexport async function upgrade<T extends Upgrade = Upgrade>(options: ExtractUpgrade<T>) {\n  const {allDependencies, isNextUIAll} = options as Required<Upgrade>;\n  const {upgradeOptionList} = options as Required<Upgrade>;\n  let result: UpgradeOption[] = [];\n\n  if (isNextUIAll) {\n    const latestVersion = await getLatestVersion(NEXT_UI);\n    const {currentVersion, versionMode} = getVersionAndMode(allDependencies, NEXT_UI);\n    const colorVersion = getColorVersion(currentVersion, latestVersion);\n    const isLatest = latestVersion === currentVersion;\n    const outputInfo = getUpgradeVersion([\n      {\n        isLatest,\n        latestVersion: colorVersion,\n        package: NEXT_UI,\n        version: currentVersion,\n        versionMode\n      }\n    ]);\n\n    outputBox({text: outputInfo});\n\n    if (!isLatest) {\n      result.push({\n        isLatest,\n        latestVersion,\n        package: NEXT_UI,\n        version: currentVersion,\n        versionMode\n      });\n    }\n  } else {\n    const outputUpgradeOptionList = upgradeOptionList.map((c) => ({\n      ...c,\n      latestVersion: getColorVersion(c.version, c.latestVersion)\n    }));\n    const outputInfo = getUpgradeVersion(outputUpgradeOptionList);\n\n    outputBox({text: outputInfo});\n\n    result = upgradeOptionList.filter((upgradeOption) => !upgradeOption.isLatest);\n  }\n\n  return result;\n}\n"]}